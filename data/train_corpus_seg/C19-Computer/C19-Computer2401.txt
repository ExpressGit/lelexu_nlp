计算机 研究 与 发展 
 JOURNALOFCOMPUTERRESEARCHANDDEVELOPMENT 
 1999 年 　 第 36 卷 　 第 10 期 　 Vol.36 　 No.10 　 1999 
 
 
 
 具有 变异 特征 的 蚁 群 算法 
 吴庆洪 　 张纪会 　 徐心 和 
 　 　 摘 　 要 　 蚁群 算法 是 一种 新型 的 模拟 进化 算法 ， 初步 的 研究 已经 表明 该 算法 具有 许多 优良 的 性质 ， 但 该 算法 也 存在 一些 缺点 ， 如 计算 时间 较长 . 为了 克服 这一 缺点 ， 文中 给出 一种 新 的 蚁 群 算法 — — 具有 变异 特征 的 蚁 群 算法 . 在 基本 蚁群 算法 中 引入 变异 机制 ， 充分利用 了 2 - 交换法 简洁 高效 的 特点 ， 使得 该 方法 具有 较 快 的 收敛 速度 ， 节省 计算 时间 . 计算机 仿真 结果表明 该 方法 是 行之有效 的 . 
 　 　 关键词 　 蚁群 系统 , 模拟 进化 算法 , 变异 机制 
 　 　 中图法 分类号 　 TP301.6 
 ANANTCOLONYALGORITHMWITHMUTATIONFEATURES 
 WUQing - Hong , ZHANGJi - Hui , andXUXin - He 
 ( Control & SimulationCenter , NortheastUniversity , Shenyang110006 ) 
 　 　 Abstract 　 Antcolonyalgorithmisanovelsimulatedevolutionaryalgorithmwhichshowsmanypromisingcharacters , butitalsohassomeshortcomingssuchasneedinglongercomputingtimeetc .. Inordertoovercomethisdefect , anewantcolonyalgorithm , anantcolonyalgorithmwithmutationfeatures , isproposedinthepaperhere . Becauseoftheintroductionofmutationmechanismwhichmakesfulluseofstrengthof2 - exchangemethod , itcanquickentheconvergencerateanddecreasecomputingtime . Computingsimulationexamplesshowitsvalidity . 
 　 　 Keywords 　 antcolonysystem , mutationmechanism , simulatedevolutionaryalgorithm 
 1 　 引言 
 　 　 本世纪 50 年代 中期 创立 了 仿生学 ， 人们 从 生物进化 的 机理 中 受到 启发 ， 提出 了 许多 用以 解决 复杂 优化 问题 的 新 方法 ， 如 遗传算法 、 进化 规划 、 进化 策略 等 ［ 1 ］ ， 并 成功 地 应用 于 实际 问题 ［ 2 ］ . 蚁群 算法 ( antcolonyalgorithm ， ACA ) 是 最近 几年 才 提出 的 一种 新型 的 模拟 进化 算法 ， 它 是 由 意大利 学者 M . Dorigo ， V . Maniezzo ， A . Colorni 等 人 首先 提出 来 的 ［ 3 ～ 5 ］ ， 他们 称之为 蚁群 系统 ( antcolonysystem ) , 并用 该 方法 求解 TSP 问题 ［ 5 ］ 、 分配 问题 ［ 3 ］ 、 job - shop 调度 问题 ［ 5 ］ , 取得 了 一系列 较 好 的 实验 结果 . 受其 影响 ， 蚁群 系统 模型 逐渐 引起 了 其它 研究者 的 注意 ， 并用 该 算法 来 解决 一些 实际 问题 ［ 6 ］ . 虽然 对此 方法 的 研究 刚刚 起步 ， 但是 这些 初步 研究 已 显示 出蚁 群 算法 在 求解 复杂 优化 问题 ( 特别 是 离散 优化 问题 ) 方面 的 一些 优越性 ， 证明 它 是 一种 很 有 发展前景 的 方法 . 本文 对 该 方法 作 了 一些 研究 . 文章 组织 结构 如下 ： 首先 简要 介绍 一下 蚁群 算法 的 由 来 及其 基本原理 ； 本文 第 3 部分 介绍 蚁群 算法 的 模型 及其 实现 ； 然后 用 实例 说明 基本 蚁群 算法 的 优点 与 不足 及其 改进 方法 ； 最后 给出 实验 结果 验证 我们 给出 的 蚁 群 算法 的 有效性 . 
 2 　 基本 蚁群 算法 的 原理 
 　 　 人 工蚁 群 算法 是 受到 人们 对 自然界 中 真实 的 蚁 群 集体 行为 的 研究成果 的 启发 而 提出 的 一种 基于 蚁 群 的 模拟 进化 算法 ， 属于 随机 搜索算法 ， 由 意大利 学者 M . Dorigo 等 人 首先 提出 ［ 3 ］ . M . Dorigo 等 人 首次 提出 该 方法 时 ， 充分利用 了 蚁 群 搜索 食物 的 过程 与 著名 的 旅行 商 问题 ( TSP ) 之间 的 相似性 ， 通过 人工模拟 蚂蚁 搜索 食物 的 过程 ( 即 通过 个体 之间 的 信息 交流 与 相互协作 最终 找到 从 蚁穴 到 食物 源 的 最 短 路径 ) 来 求解 TSP 问题 ， 为了 区别 于 真实 蚂蚁 群体 系统 ， 我们 称 这种 算法 为 “ 人 工蚁 群 算法 ” . 为了 说明 人 工蚁 群 系统 的 原理 ， 我们 先 简要 介绍 一下 蚂蚁 搜索 食物 的 具体 过程 . 
 　 　 像 蚂蚁 这 类群 居 昆虫 ， 虽然 没有 视觉 ， 却 能 找到 由 蚁巢 到 食物 源 的 最 短 路径 ， 原因 是 什么 呢 ？ 虽然 单个 蚂蚁 的 行为 极其 简单 ， 但 由 这样 的 单个 简单 的 个体 所 组成 的 蚁 群 群体 却 表现 出 极其 复杂 的 行为 ， 能够 完成 复杂 的 任务 ， 不仅如此 ， 蚂蚁 还 能够 适应环境 的 变化 ， 如 : 在 蚁 群 运动 路线 上 突然 出现 障碍物 时 ， 蚂蚁 能够 很快 地 重新 找到 最优 路径 ， 蚁 群 是 如何 完成 这些 复杂 任务 的 呢 ? 所有 这些 问题 ， 很 早就 激起 了 生物学家 和 仿生学 家 的 强烈 兴趣 ， 仿生学 家 经过 大量 细致 观察 研究 发现 ， 蚂蚁 个体 之间 是 通过 一种 称之为 外激素 ( pheromone ) 的 物质 进行 信息 传递 ， 从而 能 相互协作 ， 完成 复杂 的 任务 . 蚁群 之所以 表现 出 复杂 有序 的 行为 ， 个体 之间 的 信息 交流 与 相互协作 起着 重要 的 作用 . 
 　 　 蚂蚁 在 运动 过程 中 ， 能够 在 它 所 经过 的 路径 上 留下 该种 物质 ， 而且 蚂蚁 在 运动 过程 中 能够 感知 这种 物质 的 存在 及其 强度 ， 并 以此 指导 自己 的 运动 方向 ， 蚂蚁 倾向 于 朝着 该 物质 强度 高 的 方向 移动 . 因此 ， 由 大量 蚂蚁 组成 的 蚁 群 的 集体 行为 便 表现 出 一种 信息 正反馈 现象 : 某一 路径 上 走过 的 蚂蚁 越 多 ， 则 后来者 选择 该 路径 的 概率 就 越 大 . 蚂蚁 个体 之间 就是 通过 这种 信息 的 交流 达到 搜索 食物 的 目的 . 对此 过程 ， M . Dorigo 等 人 在 文献 ［ 7 ］ 中曾 用 图示 方式 形象 地 描述 这一 过程 ， 这里 不再 赘述 . 
 　 　 蚁群 算法 是 一种 随机 搜索算法 ， 与 其它 模拟 进化 算法 一样 ， 通过 候选 解 组成 的 群体 的 进化 过程 来 寻求 最优 解 ， 该 过程 包含 两个 基本 阶段 : 适应 阶段 和 协作 阶段 . 在 适应 阶段 ， 各 候选 解 根据 积累 的 信息 不断 调整 自身 结构 ； 在 协作 阶段 ， 候选 解 之间 通过 信息 交流 ， 以 期望 产生 性能 更好 的 解 . 
 3 　 基本 蚁群 系统 模型 及其 实现 
 　 　 为了 便于 理解 ， 我们 以 求解 平面 上 n 个 城市 的 TSP 问题 ( 0 ， 1 ， … ， n - 1 表示 城市 序号 ) 为例 说明 蚁群 系统 模型 . n 个 城市 的 TSP 问题 就是 寻找 通过 n 个 城市 各 一次 且 最后 回到 出发点 的 最 短 路径 . 我们 之所以 选择 TSP 问题 ， 一方面 是因为 蚁群 算法 最初 用于 求解 TSP 问题 ， 便于 比较 ， 另一方面 ， TSP 是 典型 的 组合 优化 难题 ， 常常 用来 验证 某一 算法 的 有效性 . 对于 其它 问题 ， 可以 对此 模型 稍作 修改 便 可 应用 ［ 6 ］ . 虽然 它们 从 形式 上 看 略有不同 ， 但 基本原理 是 相同 的 ， 都 是 通过 模拟 蚁群 行为 到达 优化 之 目的 . 
 　 　 为 模拟 实际 蚂蚁 的 行为 ， 首先 引进 如下 记号 ： 设 m 是 蚁 群中 蚂蚁 的 数量 ， dij ( i , j = 1 , 2 , … , n ) 表示 城市 i 和 城市 j 之间 的 距离 ， bi ( t ) 表示 t 时刻 位于 城市 i 的 蚂蚁 的 个数 ， 表示 t 时刻 在 ij 连线 上 残留 的 信息量 . 初始 时刻 ， 各条 路径 上 信息量 相等 ， 设 τ ij ( 0 ) = C ( C 为 常数 ) . 蚂蚁 k ( k = 1 , 2 , ... , m ) 在 运动 过程 中 , 根据 各条 路径 上 的 信息量 决定 转移 方向 ， ( t ) 表示 在 t 时刻 蚂蚁 k 由 位置 i 转移 到 位置 j 的 概率 ， 
 
 ( 1 ) 
 其中 ， allowedk = { 0 , 1 , ... , n - 1 } - tabuk 表示 蚂蚁 k 下 一步 允许 选择 的 城市 . 与 实际 蚁群 不同 ， 人 工蚁 群 系统 具有 记忆 功能 ， tabuk ( k = 1 , 2 , ... , m ) 用以 记录 蚂蚁 k 当前 所 走过 的 城市 , 集合 tabuk 随着 进化 过程 作 动态 调整 . 随着 时间 的 推移 ， 以前 留下 的 信息 逐渐 消逝 ， 用 参数 1 - ρ 表示 信息 消逝 程度 ， 经过 n 个 时刻 ， 蚂蚁 完成 一次 循环 ， 各 路径 上 信息量 要 根据 下式 作 调整 ， 
 τ ij ( t + n ) = ρ . τ ij ( t ) + Δ τ ij 　 ρ ∈ ( 0 , 1 ) 
 ( 2 ) 
 
 ( 3 ) 
 Δ 表示 第 k 只 蚂蚁 在 本次 循环 中 留在 路径 ij 上 的 信息量 ， Δ 表示 本次 循环 中 路径 ij 上 的 信息量 的 增量 . 
 
 ( 4 ) 
 其中 ， Q 是 常数 ， Lk 表示 第 k 只 蚂蚁 在 本次 循环 中所 走 路径 的 长度 . 在 初始 时刻 ， ( 0 ) = C ( const ) , Δ = 0 ( i , j = 0 , 1 , ... , n - 1 ) . α , β 分别 表示 蚂蚁 在 运动 过程 中 所 积累 的 信息 及 启发式 因子 在 蚂蚁 选择 路径 中所起 的 不同 作用 . η ij 表示 由 城市 i 转移 到 城市 j 期望 程度 ， 可 根据 某种 启发式 算法 具体 确定 . 根据 具体 算法 的 不同 ， ( t ) ， Δ ( t ) 及 ( t ) 的 表达形式 可以 不同 ， 要 根据 具体 问题 而定 . M . Dorigo 曾 给出 3 种 不同 模型 ， 分别 称之为 ant - cyclesystem ， ant - quantitysystem ， ant - densitysystem ［ 7 ］ . 它们 的 差别 在于 表达式 ( 4 ) 的 不同 . 在 ant - quantitysystem 模型 中 ， 
 
 ( 5 ) 
 在 ant - densitysystem 模型 中 ， 
 
 ( 6 ) 
 　 　 它们 的 区别 在于 后 两种 模型 中 利用 的 是 局部 信息 ， 而 前者 利用 的 是 整体 信息 ， 在 求解 TSP 问题 时 性能 较 好 . 因而 我们 采用 它 作为 基本 模型 . 参数 Q ， C ， α ， β ， ρ ， 可以 用 实验 方法 确定 其 最优 组合 . 停止 条件 可以 用 固定 进化 代数 或者 当 进化 趋势 不 明显 时 便 停止 计算 . 
 　 　 由 算法 复杂度 分析 理论 可知 ， 该 算法 复杂度 为 O ( nc . n3 ) , 其中 ， nc 表示 循环 次数 . 以上 是 针对 求解 TSP 问题 说明 蚁群 模型 的 ， 对 该 模型 稍作 修正 ， 便 可以 应用 于 其它 问题 ， 这 一方面 已有 某些 较 好 结果 出现 ［ 6 , 8 ］ . 
 4 　 基本 蚁群 算法 的 优点 与 不足之处 
 　 　 为了 说明 基本 蚁群 系统 的 优点 与 不足 ， 我们 给出 用 基本 蚁群 算法 求解 Oliver30TSP 的 典型 实验 结果 ( 见图 1 、 表 1 ) ， 该 实验 结果 来源于 文献 ［ 7 ］ , 取 10 次 实验 的 平均值 . 
 
 
 图 1 　 最好 解 进化 曲线图 
 表 1 　 蚁群 算法 与 其它 算法 的 比较 
 
 算法 基本 算法 ① 2 - optL - K 
 antcolonysystem420 — — 
 nearneighbor587437421 
 farinsert428421420 
 nearinsert510492410 
 spacefillingcurve464431421 
 sweep486426420 
 random1212663421 
 
 ① 所谓 基本 算法 是 指 最初 提出 的 算法 形式 
 　 　 从 这 一系列 实验 结果 我们 可以 发现 ， 蚁群 算法 具有 很强 的 发现 较 好解 的 能力 ， 不 容易 陷入 局部 最优 ， 这 是因为 该 算法 不仅 利用 了 正反馈 原理 ， 在 一定 程度 上 可以 加快 进化 过程 ， 而且 是 一种 本质 并行 的 算法 ， 个体 之间 不断 进行 信息 交流 和 传递 ， 有利于 发现 较 好解 . 单个 个体 容易 收敛 于 局部 最优 ， 多个 个体 通过 合作 ， 很快 收敛 于解 空间 的 某 一 子集 ， 有利于 对解 空间 的 进一步 探索 ， 从而 不 容易 陷入 局部 最优 ， 有利于 发现 较 好解 . 但是 ， 这种 算法 也 存在 一些 缺陷 ， 如 : 需要 较长 的 搜索 时间 ， 对于 这一 问题 ， 文献 ［ 9 ］ 也 曾经 指出 过 ， 但 没有 提出 改善 方法 . 虽然 计算机 计算速度 的 提高 和 蚁 群 算法 的 本质 并行性 在 一定 程度 上 可以 缓解 这一 问题 ， 但是 对于 大规模 优化 问题 ， 这 还是 一个 很大 的 障碍 . 
 　 　 蚁 群中 各 个体 的 运动 是 随机 的 ， 虽然 通过 信息 交换 能够 向着 最优 路径 进化 ， 但是 当 群体 规模 较大 时 ， 很难 在 较 短 的 时间 内 从 大量 杂乱无章 的 路径 中 找出 一条 较 好 的 路径 . 这 是因为 在 进化 的 初级阶段 ， 各个 路径 上 信息量 相差 不 明显 ， 通过 信息 正反馈 ， 使得 较 好 路径 上 的 信息量 逐渐 增大 ， 经过 较长 一段时间 ， 才能 使得 较 好 路径 上 的 信息量 明显 高于 其它 路径 上 的 信息量 ， 随着 这一 过程 的 进行 ， 差别 越来越 明显 ， 从而 最终 收敛 于 较 好 的 路径 . 这一 过程 一般 需要 较长 的 时间 . 为了 克服 计算 时间 较长 的 缺陷 ， 受到 遗传算法 中 的 变异 算子 的 作用 的 启发 ， 我们 提出 一种 新 的 蚁 群 进化 算法 — — 具有 变异 特征 的 蚁 群 算法 . 我们 采用 逆转 变异 方式 ， 设某 个体 所 走 路径 为 : i0i1i2 ... i ( n - 1 ) , ( i0 , i1 , ... , in - 1 ∈ ｛ 0 , 1 , 2 , ... , n - 1 ｝ ) , 如果 满足 
 
 其中 ， s1 , s2 ∈ { 0 , 1 , ... , n - 1 } , 符号 % 表示 整除 符号 . 进行 操作 : inversion ( s1 ， s2 , solutioni ) , 函数 inversion ( ) 的 功能 是 把 个体 solutioni 的 s1 + 1 和 s2 这 一段 颠倒 过来 . 如 ： 
 inversion ( 2 , 5 , 0123456 ) = 0125436 
 　 　 其中 ， 变异 的 次数 是 随机 的 . 这一 过程 涉及 到 的 运算 比蚁 群 算法 中 的 循环 过程 要 简单 得 多 ， 因此 只 需较 短 的 时间 便 可 完成 相同 次数 的 运算 . 另一方面 ， 经过 这种 变异 算子 作用 后 ， 这 一代 解 的 性能 会 有 明显改善 ， 从而 也 能 改善 整个 群体 的 性能 ， 减少 计算 时间 . 就此 方法 ， 我们 作 了 大量 实验 例子 ， 实验 结果表明 这种 方法 是 很 有效 的 . 　 　 
 　 　 我们 的 算法 可以 用伪 代码 表示 为 
 　 　 begin 
 　 　 初始化 过程 : 
 　 　 ncycle ∶ = 0 ; 
 　 　 bestcycle ∶ = 0 ; 
 　 　 τ ij ∶ = C ； 
 　 　 Δ τ ij = 0 ； 
 　 　 η ij 由 某种 启发式 算法 确定 ; 
 　 　 tabuk = В 
 　 　 while ( notterminationcondition ) 
 　 　 { ncycle ∶ = ncycle + 1 ; 
 　 　 for ( index = 0 ; index < n ; index ++ ) 
 　 　 ／ 砳 ndex 表示 已 走 城市 的 个数 * / 
 　 　 { for ( k = 0 ; k < m ; k ++ ) 
 　 　 { 以 概率 选择 城市 j ; 
 　 　 j ∈ { 0 , 1 , ... , n - 1 } - tabuk 
 　 　 } 
 　 　 把 所 选择 的 城市 序号 加到 tabuk 中 
 　 　 / * ( 动态 调整 集合 tabuk ) ; * / 
 　 　 } 
 　 　 计算 Δ ( index ) , τ ij ( index + n ) 
 　 　 确定 本次 循环 中 找到 的 最佳 路径 
 　 　 } 
 　 　 输出 最佳 路径 及 最佳 结果 
 　 　 end 
 5 　 实验 结果 
 　 　 我们 选用 Oliver30TSP 作为 实验 例子 进行 实验 . 我们 之所以 选用 该 例子 ， 一方面 是因为 M . Dorigo 曾经 选用 该 例子 ， 从而 便于 比较 . 另一方面 ， TSP 问题 是 典型 的 NP - hard 问题 ， 常常 用来 验证 某一 算法 的 有效性 . 我们 在 PC机 上用 C语言 编程 实现 该 算法 . 这里 的 实验 结果 是 10 次 实验 的 平均 结果 ( 见图 2 、 图 3 、 图 4 ) . 
 
 
 图 2 　 最好 解 进化 曲线图 
 
 
 图 3 　 最差 解 进化 曲线图 
 
 
 图 4 　 所 找到 的 最优 路径 
 表 2 　 本文 算法 在 不同 参数 下 的 实验 结果 
 
 α β ρ 最短 路径 
 的 长度 　 达到 收敛 　 　 　 　 
 所 需要 的 进化 代数 
 220.542456 
 220.9424 . 850 
 120.5428 . 262 
 520.9423 . 749 
 520.5423 . 844 
 
 　 　 为 便于 比较 ， 我们 给出 由 基本 蚁群 算法 计算 得到 的 结果 ( 见图 5 、 图 6 、 表 3 ) . 
 
 
 图 5 　 基本 算法 的 最好 解 进化 曲线图 
 
 
 图 6 　 基本 算法 的 最差 解 进化 曲线图 
 表 3 　 基本 蚁群 算法 在 不同 参数 下 的 实验 结果 
 
 α β ρ 最 短路 
 径 长度 达到 收敛 　 　 　 　 
 所 需要 的 进化 代数 
 220.5424 . 8350 
 220.9427344 
 120.5423 . 7342 
 520.9430 . 5338 
 520.5445347 
 
 　 　 文献 ［ 7 ］ 需要 经过 342 代 才能 找到 较 好解 ( 423.74 ) , 而 本文 仅 需要 大约 50 代便 可以 找到 同样 的 解 . 对于 48 个 城市 的 TSP 问题 ， 用 本文 算法 也 得到 了 较 好 的 结果 ( 见表 4 ) . 通过 对 以上 的 实验 结果 比较 可以 看出 ， 由于 变异 算子 的 引入 ， 经过 较少 的 进化 代数 就 可以 找到 相同 的 较 好解 ， 大大 节省 计算 时间 ， 对于 求解 大规模 优化 问题 是 十分 有利 的 . 
 表 4 　 48 个 城市 TSP 实验 结果 
 
 算法 α β ρ 最 短路 
 径 长度 达到 收敛 　 　 　 　 
 所 需要 的 进化 代数 
 基本 算法 220.574 . 3390 
 基本 算法 120.975 . 4357 
 基本 算法 520.573 . 7347 
 本文 算法 120.571 . 443 
 本文 算法 520.972 . 747 
 本文 算法 220.571 . 140 
 
 6 　 结论 
 　 　 本文 提出 的 具有 变异 特征 的 蚁 群 算法 ， 可以 有效 地 克服 基本 蚁群 算法 中 计算 时间 较长 的 缺陷 ， 有利于 实际 运用 . 蚁群 算法 的 研究 刚刚开始 ， 远未 像 GA ， SA 等 算法 那样 形成 系统 的 分析方法 和 坚实 的 数学 基础 ， 许多 问题 有待 进一步 研究 . 怎样 从 理论 上 对 该 算法 进行 更 深刻 地 研究 ， 以及 如何 更 有效 地用 蚁 群 算法 解决 实际 问题 将 是 我们 进一步 研究 的 内容 . 
 本 课题 得到 国家 “ 八 六三 ” CIMS 主题 资助 ( 项目编号 863 - 511 - 9508 - 004 ) . 
 作者简介 ： 吴庆洪 ， 男 ， 1967 年 7 月生 ， 博士 研究生 ， 主要 研究 方向 为 计算机控制 、 工业 自动化 等 . 
 　 　 　 　 　 张纪会 ， 男 ， 1969 年 10 月生 , 博士 研究生 , 主要 研究 方向 为 离散 事件 动态 系统 、 智能 生产 调度 、 智能 计算 等 . 
 　 　 　 　 　 徐心 和 ， 男 ， 1940 年 12 月生 , 教授 , 博士生 导师 , 主要 研究 方向 为 离散 事件 动态 系统 、 计算机控制 与 仿真 、 混杂 系统 、 生产 调度 等 . 
 作者 单位 ： 东北大学 控制 仿真 中心 　 沈阳 　 110006 
 参考文献 
 　 1 　 　 GoldbergDE . GeneticAlgorithminSearch , OptimizationandMachineLearning . NewYork : AddisonWesley , 1989 
 　 2 　 　 DavisL . TheHandbookofGeneticAlgorithms . NewYork : VanNostrandReingold , 1991 
 　 3 　 　 ColorniA , DorigoM , ManiezzoV . Distributedoptimizationbyantcolonies . In : Proc1stEuropeanConfArtificialLife . Pans , France : Elsevier , 1991.134 ～ 142 
 　 4 　 　 ColorniA , DorigoM , ManiezzoV . Aninvestigationofsomepropertiesofanantalgorithm . In : ProcPPSN ' 92 , London , 1992.509 ～ 520 
 　 5 　 　 ColorniA , DorigoM , ManiezzoV , TrubianN . Antsystemforjob - shopscheduling . BelgianJournalofOperationsResearchandStatisticComputingScience , 1994 , 34 ( 1 ) : 39 ～ 53 
 　 6 　 　 CostaD , HertzA , DubuisO . Imbeddingofasequentialalgorithmwithinanevolutionaryalgorithmforcoloringproblemingraphs . JournalofHeuristics , 1995 , 1 : 105 ～ 128 
 　 7 　 　 DorigoM , ManiezzoV , ColorniA . Antsystem : Optimizationbyacolonyofcooperatingagents . IEEETransonSMC , 1996 , 26 ( 1 ) : 28 ～ 41 
 　 8 　 　 BilchevG , ParmeeIC . Searchingheavilyconstraineddesignspaces . In : Proc22ndIntConfCAD - 95 , Yelta , Ukraine , 1995 
 　 9 　 　 DorigoM , ManiezzoV , ColorniA . Antsystem : Anautocatalyticoptimizingprocess . TechRep : 91 - 016 , 1991 
 原稿 收到 日期 ： 1997 - 11 - 19 ； 
 修改稿 收到 日期 ： 1999 - 04 - 08 . 
