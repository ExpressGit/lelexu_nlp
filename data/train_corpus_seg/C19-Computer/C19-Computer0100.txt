计算机 工程 
 ComputerEngineering 
 1999 年 　 第 25 卷 　 第 9 期 　 Vol.25 No.91999 
 
 
 
 更 实际 的 民构 并行计算 模型 
 黄 伟民 　 陆鑫达 　 钟 　 嵘 
 　 　 摘 　 要 　 通过 结合 多种 代表性 并行计算 模型 ， 给出 异构 环境 中 的 HBSP 模型 和 程序 开销 计算方法 ． 采用 基于 消息 长度 的 线性 模型 具有 通信 开销 的 计算 更 精确 、 程序 和 算法 在 异构 环境 中 的 设计 灵活 、 且 可 解除 原有 BSP 模型 对 h - relation 的 限制 等 优点 ． 当 构成 BSP 计算机 的 各 处理机 速度 相同 原有 BSP 算法 达到 最优 ( 即 各 处理机 上 所 分配 的 计算 量 与 通信量 完全 均衡 ) 时 , HBSP 模型 等同于 原有 模型 . 
 　 　 关键词 　 异构计算 ； BSP 模型 ； 并行计算 模型 
 MorePracticalHeterogeneousParallelComputingModel 
 HuangWeimin , LuXinda , ZhongRong 
 ( Dept . ofComputerScienceofShanghaiJiaotongUniv . , Shanghai200030 ) 
 　 　 Abstact 　 Inthispaper , severtalstandingparallelcomputingmodelsarecombinedandHeterogeneousBulkSynchronousParallel ( HBSP ) modelisproposed . Thecommunicationcostpredictionismademorepreciselybasedonlinermodelofmessagelength , andtherestrictiononh - relationoforiginalBSPmodeliscanceledtomakethealgorithmandprogramdesigninHBSPmoreflexible . TheHSBPmodelissameastheorignalwhenprocessorspeedofBSPcomputerisallthesameandtheoriginalBSPalgorithmisoptimized ( e . g . thecomputationloadandcommunicationloadaretotallybalanced ) . 
 　 　 Keywords 　 Heterogeneouscomputing ; Bulksynchronousparallelmodel ; Parallelcomputingmodel 
 　 　 由 多个 独立 计算 系统 通过 网络 构成 的 异构 系统 群 ， 可以 转变成 一个 一致 的 、 功能强大 的 和 较 高性能 价格比 的 并行计算 资源 。 近年来 ， 异构 并行计算 在 高性能 科学计算 和 通用 应用领域 受到 广泛 研究 。 在 异构 网络 计算 中 ， 常 采用 消息传递 编程 模型 ， 即 一个 并行程序 由 一组 相互协作 的 进程 组成 ， 每个 进程 都 完成 相同 的 任务 ， 在 执行 时 交换 消息 。 消息传递 编程 具有 较强 的 功能 ， 可以 设计 出 高效 和 可移植 的 并行程序 ， 但 缺乏 理论指导 ， 需要 编程人员 将 数据 和 计算 量 手工 分配 到 各个 处理器 上 ， 源码 中需 显式 增加 用于 处理器 之间 通信 的 例程 。 若 代码 具有 清晰 的 并行 结构 和 较 少且 规则 的 通信 ， 则 易于 实现 。 当 代码 难以 并行 且 并行 进程 产生 处理器 之间 的 大量 不规则 通信 时 ， 消息传递 库函数 的 使用 将 变得 很 困难 。 具体 的 编程 方法 、 正确性 检查 、 性能 分析 等 方面 仍然 处于 经验 阶段 ， 且 易于 出错 。 从 编程 模型 的 角度 来看 ， 需要 一种 更 自然 和 简单 的 计算 模型 来 解决 这一 问题 。 以下 结合 多种 代表性 计算 模型 ， 给出 适合 于 异构 网络 计算环境 的 程序设计 和 开销 计算方法 。 
 1 并行计算 模型 
 　 　 并行计算 模型 是 一个 将 高层次 特点 与 低层次 特性 分离 开来 的 界面 ， 提供 在 其 上 进行 编程 的 特定 操作 ， 对 其下 所有 结构 中 每个 操作 的 实现 作出 要求 。 它 是 用来 把 软件设计 与 高效 并行执行 分离 开来 ， 提供 抽象性 和 稳定性 。 抽象性 是 由于 模型 提供 的 操作 比 底层 结构 所 提供 的 操作 高级 得 多 ， 简化 了 软件结构 ， 减少 了 软件设计 的 困难 。 稳定性 是 由于 软件设计 可以 基于 一个 长时间 保持稳定 不变 的 标准接口 ， 不用 考虑 并行 计算机 结构 的 变化 。 同时 ， 模型 形成 了 每个 并行机 实现 时所 基于 的 固定 起点 ( 程序转换 系统 、 编译 和 运行 系统 ) 。 
 1.1 共享 存储 同步 计算 模型 PRAM 
 　 　 常见 的 PRAM 是 一种 共享 存储 的 同步 计算 模型 ， 各 处理器 均 可 在 单位 时间 内读 、 写 共享内存 ， 处理器 间 同步 在 一个 全局 时钟 下 以锁步 ( Lockstep ) 方式 实现 ， 因而 在 算法 设计 和 分析 时 同步 是 隐含 的 ， 无需 在 算法 中 明确 设置 同步 点 。 PRAM 中 的 处理器 分配任务 后 ， 将 并行 地 完成 各自 的 局部 计算 ， 在 遵守 不同 的 并发 读写 限制 ( 如 EREW ， CREW 和 CRCW ) 的 前提 下 ， 可任意 读写 共享 存储单元 ， 然后 同步 地 开始 下 一个 局部 计算 。 PRAM 的 算法 设计 和 分析 比较简单 ， 可 用于 对 并行算法 的 总体 分类 ， 然而 却 不 适合 于 异步 操作 的 MIMD 机器 ； 同时 考虑 到 存储 带宽 和 存储管理 的 开销 ， 假定 访问 内存 为 单位 时间 也 是 不 合适 的 ， 因而 也 不 适合 于 对 实际 的 并行 计算机 进行 性能 预测 。 
 1.2 BSP 模型 
 　 　 在 BSP 模型 ( BulkSynchroneousParallel ) 中 ， 计算 由 一系列 全局 同步 分开 的 长度 至少 为 L 的 超步 组成 。 在 每个 超步 中 ， 每个 处理器 均 执行 局部 计算 ， 并 通过 网络 接收 和 发送至 多 h 条 消息 ( 称为 h - relation ) ， 然后 作 同步 检查 ， 以 确定 该 超步 是否 完成 。 在 每个 超步 开始 时 ， 处理器 仅 对 已经 有效 的 局部 数据 进行 操作 ， 若 数据 未 准备 好 ， 则 推迟 到 下 一个 超步 开始 时 再 进行 计算 。 BSP 模型 主要 由 3 个 参数 表示 ， 分别 是 ： p 为 处理单元 的 数目 ； g 为 整个 系统 的 计算能力 与 网络 传送 消息 的 通信 能力 的 比值 ， 更 形式化 一些 ， 系统 需要 gh 个 时间 单位 来 完成 h - relation 操作 。 BSP 在 一条 长为 m 的 消息 和 m 条长 为 1 的 消息 之间 不 作 区分 ， 两种 开销 均 为 mhg ； L 为 连续 两个 同步操作 之间 最少 所 需 时间 间隔 。 
 1.3 LogP 模型 
 　 　 LogP 模型 主要 由 4 个 参数 描述 ： L ： 消息 从源 到 目的地 的 延迟 ； o ： 处理器 发送 / 接收 一条 消息 所 需 的 额外 开销 ； g ： 处理器 可 连续 发送 或 接收 消息 的 最小 间隔 ； P ： 处理器 数目 。 LogP 模型 中 计算 也 是 一系列 的 超步 ， 超步 内 消息 一旦 到达 ， 处理器 就 可 计算 ， 不必 等 特 ， 超步间 无 显式 同步操作 ， 每个 处理器 均 利用 点到点 消息传递 方式 实现 隐含 的 同步 。 理论 上 LogP 的 超步 不必 像 BSP 那样 受 接收 或 发送 消息 数目 的 限制 ， 且 超步 之间 无需 显式 的 同步操作 ， 算法 的 设计 似应 更加 方便 和 灵活 。 但 实际上 LogP 算法 的 设计 技巧性 很强 ， 要 对 每个 处理器 的 局部 计算 步 进行 仔细 安排 ， 以 在 网络通信 能力 的 限制 范围 内 将 通信 操作 和 计算 操作 尽可能 重叠 起来 ； 要 妥善 分配 处理器 ， 以 减少 对 通信 带宽 的 要求 和 降低 远程 访问 的 频率 。 不同 的 LogP 算法 其 设计 技巧 亦 不同 ， 基本上 无章可循 。 
 1.4 LogGP 模型 
 　 　 LogGP 模型 [ 1 ] 是 对 LogP 模型 的 扩展 。 在 只有 短消息 时 ， LogP 可以 准确 地 预测 通信 性能 ， 但 对长 消息 却 不能 。 LogGP 模型 将 LogP 模型 和 一个 用于 描述 长 消息 的 线性 模型 结合 起来 ， 增加 了 一个 参数 G ， 用以 描述 发送 长 消息 时 的 网络带宽 。 一些 算法 ( 如 FFT 、 排序 等 ) 设计 分析 和 实验 数据 表明 ， 这个 扩展 可以 准确 地 预测 长短 两种 消息 的 通信 性能 。 LogGP 的 算法 与 LogP 的 优化 算法 相比 ， 执行 速度 和 性能 有 较大 提高 ， 但 随着 模型 的 进一步 复杂化 ， LogGP 上 的 算法 设计 和 分析 也 更为 复杂 。 
 1.5 并行计算 模型 小结 
 　 　 与 BSP 相比 ， LogP 在 三 方面 有所不同 ： ( 1 ) LogP 采用 基于 pairwise 同步 的 消息传递 方式 ； ( 2 ) LogP 增加 参数 o ， 以 表示 发送 消息 时 所 需 额外 开销 ， 而 BSP 中除 应用 于 单个 消息 通信 外 ， 这个 参数 一般 可以 忽略 ； ( 3 ) LogP 模型 中 的 g 是从 局部 的 角度 来 定义 的 。 可以 说 ， LogP + Barriers - Overhead = BSP 。 两者 相比 ， BSP 模型 更 具有 结构性 ， 也 更加 简单 。 LogP 模型 似乎 更为 灵活 ， 却 要求 很强 的 设计 技巧 ， 使 算法 和 程序设计 的 复杂性 难于 控制 。 研究 表明 [ 2 ] ， BSP 和 LogP 模型 可以 有效 地 相互 模拟 ， 使用 更 简单 的 BSP 编程 方式 基本 不会 对 性能 造成 影响 。 同时 ， 对 LogGP 的 研究 发现 ， 实现 长 消息 的 最 简单 办法 是 将 发往 同一 处理器 的 几个 消息 合并 成 一个 消息 。 这 与 BSP 模型 的 一个 主要 特点 不谋而合 ， 即 发往 另 一个 处理器 的 消息 并 不 立即 发出 ， 等到 超步 结束 时 ， 将 几个 消息 合并 后 一次 发出 。 
 　 　 综上所述 ， 关于 计算 模型 的 概念 已经 越来越 清晰 和 统一 ， 一个 好 的 模型 应 具有 易于 编程 、 确保 程序正确性 、 结构 独立性 、 模型 易于 理解 、 可 高效 实现 、 提供 程序 开销 的 度量 方法 等 特性 。 从总体上 看 ， 对 计算 模型 的 研究 在 经历 了 从 PRAM - > BSP - > LogP - > LogGP 的 过程 之后 ， 又 重新 回到 BSP ， 对 BSP 的 概念 和 优缺点 有 了 更 深刻 的 认识 和 了解 。 
 　 　 BSP 模型 指导 下 的 并行程序 设计 [ 3 ] 具有 编程 简单 、 独立 于 目标 结构 和 执行 性能 可 预测 等 特点 。 BSP 程序 由于 其超步 的 结构 使 消息传递 操作 不会 出现 死锁 ， 同时 在 正确性 、 性能 分析 和 编程 方法 上 都 简单易行 ， 很 适合 异构 环境 下 的 消息传递 编程 。 但 仍 存在 要求 机 间通信 满足 h - relation 条件 、 g 的 测算 不够 精确 、 在 异构 环境 下 不再 适合 等 问题 ， 以下 给出 适合 于 异构 网络 计算环境 的 BSP 模型 和 开销 计算方法 。 
 2 异构 环境 中 的 BSP 模型 和 开销 计算 
 　 　 异构 BSP 模型 ( HBSP ) 中 计算 由 一系列 连续 的 超步 组成 。 每个 超步 中 ， 每个 处理单元 使用 超步 开始 前 已 存放 在 本地 的 数据 进行 计算 和 处理 ， 这些 任务 包括 ： ( 1 ) 对 存放 在 本地 的 数据 进行 计算 ； ( 2 ) 消息传递 ； ( 3 ) 消息 接收 。 对于 异构计算 系统 P = { P1 ， P2 ， … ， Pp } ， 其中 处理机 数 p = | P | , 处理机 速度 参数 集合 S = { S1 ， S2 ， … ， Sp } ， 任务分配 W = { w1 ， w2 ， … ， wp } ， 通信量 分配 集合 H = { h1 ， h2 ， … ， hp } 。 令 Sj 为 处理机 Pj 的 计算速度 ， bj 为 处理机 忙 闲度 ， s ' j = sj · bj 为 实际 计算速度 。 wtj = wj / s ' 为 处理机 Pj 完成 任务 wj 所需 时间 ， gt 为 发送 一个 字节 消息 所 需 时间 ， Lt 为 完成 Barrirer 同步 所 需 时间 。 
 　 　 这样 ， 每个 超步 的 开销 由 两 部分 组成 ： 每个 处理器 上 所 进行 的 本地 处理 的 最大 开销 ( 包括 局部 计算 和机 间通信 开销 ) 和 超步 结束 时 barrier 同步 的 开销 。 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 1 ) 
 第 i 个 超步 的 执行 时间 T ( x ) = Tlocalproc + Tsync = 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 2 ) 
 　 　 在 异构 BSP 模型 中 ， 参数 L 是 根据 交换 空 消息 然后 实现 Barrier 同步 的 超步 来 测算 的 。 
 　 　 机器 的 指令 速度 S 随着 计算 类型 的 重叠 不同 ， 会 有 很大 变化 ， 一般 对 下列 两种 值 进行 平均 ， [ s ] ： 给出 两个 二维 数组 A [ n ] [ m ] 和 B [ n ] [ m ] ， 其中 m 远远 大于 每个 处理器 的 cache 大小 ， 检测 一维 数组 A [ i ] [ 0 ] XB [ i ] [ 0 ] ( i = 1 , … ， n - 1 ) 的 开销 ， 由于 每次 计算 操作 需 调入 cache 的 数据 都 不 相同 ， 从而 产生 一次 cachemiss ， 可求 出 处理器 速度 的 下界 。 [ S ] ： 检测 两个 一维 数组 A [ n ] 和 B [ n ] 相乘 的 开销 ， 其中 n 远远 大于 每个 处理器 的 cache 大小 ， 大部分 计算 操作 可 在 cache 内 完成 ， 这样 求 出 处理器 速度 的 上限 ( 可 多次 循环 以 减少 误差 ) 。 
 许多 现有 的 并行 计算机 对于 长 消息 提供 特殊 的 支持 ， 发送 长 消息 的 带宽 要 远大于 发送 短消息 的 带宽 。 考虑 到 这些 因素 ， 更 精确 地 ， 在 异构 BSP 模型 中 ， 将 消息 大小 引入 通信 开销 中 ， 用 一个 线性 公式 来 描述 发送 n 字节 长 消息 所用 的 时间 ： t = t0 + tB . n ， 其中 t0 是 将 一个 消息 发 往 目标 处理机 的 通信 启动 开销 时间 ， tB 是 每 字节 所用 时间 。 实验 数据 ( 图 1 和表 1 ) 表明 ， 这个 扩展 可以 准确 地 预测 消息 的 通信 性能 。 
 　 　 〈 例 1 〉 由 ( SunE450 , SunCreator , SunUltarSparc , SunUltraSparc 等 ) 多种 机器 通过 100MbEthernet 构成 的 异构计算 系统 ， 采用 MPI 通信 原语 MPIsend 和 MPI - Recv 来 测试 不同 性能 处理机 间 的 通信 速度 和 通信 启动 开销 ， 得到 以下 测试 结果 示意图 。 
 　 　 从图 1 和表 1 中 可以 看出 ， 3 种 不同 性能 处理机 间 分别 交换 3 种 不同 数据类型 的 消息 ， 通信 时间 基本 是 通信 消息 大小 的 线性 函数 ， 各个 不同 处理机 间 的 通信 启动 开销 基本相同 ， 当 发送 消息 的 类型 变化 时 ( 从 char , integer 到 double ) ， 表示 通信 速度 的 斜率 基本 与 消息 大小 保持一致 。 需要 注意 到 ， 通信 启动 的 开销 时间 与 发送 2500 字节 的 消息 所 需 时间 基本相同 。 这 就 需要 重新考虑 通信 与 计算 的 重叠 在 异构 网络 环境 中 的 实用性 ， 重叠 最 多 可以 使 并行计算 的 速度 加倍 ， 实际 加速 比远 小于 此 ， 大部分 并行算法 的 计算 量 比 通信量 增加 得 快 ， 所以 在 设计 程序 和 算法 时应 合并 发 往 相同 处理器 的 消息 。 
 
 图 1 异构 处理机 系统 中机 间通信 结果 示意图 
 表 1 异构 系统 机 间通信 不同 类型 消息 的 斜率 
 
 处理机 斜率 
 发送 消息 类型 ： char 发送 消息 类型 ： integer 发送 消息 类型 ： double 
 SunUSparc - SunCreator0.1143210 . 4054830.756228 
 SunUSparc - SunUSparc0.1124040 . 3995760.746370 
 SunE450 - SunUSparc0.1184140 . 4054830.756047 
 
 　 　 在 一个 超步 中 ， 设 处理机 Pi 需要 发送 的 消息 集合 为 H = { h1 , h2 , … , hk } ， 其中 hi 表示 消息 的 长度 ， 一般 情况 下 消息 数目 k 与 问题 规模 相关 ， 显然 有 k > > p 。 令 h0 是 将 一个 消息 发 往 目标 处理机 的 通信 启动 开销 ， g 是 每 字节 所 需 操作 开销 ( 需要 注意 到 ， 这里 所 定义 的 g 小于 原有 BSP 模型 中 的 g ) ， 则 每条 消息 开销 为 h0 + hi . g ， 从而 Pi 的 通信 开销 为 。 由于 BSP 程序 是 在 所有 结果 都 计算出来 以后 再 进行 处理机 间 的 消息传递 操作 ， 因此 可 将 发往 相同 处理机 的 消息 合并 成 一个 大 的 消息 包 ， 则 通信 启动 开销 可以 减少 到 不 超过 p - 1 次 ， 使得 通信 开销 小于 等于 。 
 　 　 不失 一般性 ， 假设 处理机 集合 P = { P1 , P2 , … , Pp } 通过 相同 的 网络连接 而 构成 一个 BSP 计算机 ， 各 处理机 的 通信 速度 g 基本相同 。 设 处理机 实际 速度 参数 S ' = { S ' 1 ， S ' 2 ， … ， S ' p } ， 令 ， 显然 处理机 完成 Barrier 同步 所 需 时间 Lt 通常 是 由 速度 最慢 的 处理机 的 完成 时间 所 决定 ， 即 Lt = L / Smin ' 。 
 　 　 令 P * = ( P1 * , P2 * , … , Pp * ) ， 其中 Pi * = Si * / Smin ' ， 得出 ： 
 　 　 
 　 　 通信 启动 开销 ( p - 1 ) · h0 只 与 处理机 数目 相关 ， 在 问题 规模 扩大 时 可以 忽略 ， 为 简单 和 易于 应用 ， 
 　 　 可 使 ： 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 3 ) 
 　 　 根据 异构 BSP 模型 ， 得出 编写 高效 异构 BSP 程序 的 策略 ： 
 　 　 ( 1 ) 由于 每个 超步 中 的 Barrier 同步 必须 等待 最慢 的 进程 ， 要 使 T ( x ) 最小 ， 就 应 使 各 处理机 的 本地 计算 时间 和 处理机 间通信 时间 之 和 尽量 均衡 。 
 　 　 定义 1 ： 在 BSP 计算机 上 执行 的 一个 计算 任务 ， 其 分配 到 某个 处理机 Pi 的 计算 子 任务 中 ， 本地 计算 开销 与 处理机 之间 通信 开销 之 比 称为 该 计算 任务 在 Pi 上 的 本地性 水平 ， 记 作 α t 。 
 　 　 定义 2 ： 使 BSP 计算机 的 p 个 处理机 达到 相同 任务 完成 时间 的 任务分配 W ， 所 对应 的 在 处理机 P1 , P2 , … , Pp 上 的 本地性 水平 { α 1 ， α 2 ， … α p } ， 称为 { Pi } 的 临界 本地性 水平 ， 记 作 
 { α ci } 。 
 
 　 　 　 显然 有 ： { 
 　 　 　 　 　 　 　 　 　 Wi / Pi * + hi . g = Wj / Pi * + hj . g 　 　 　 i , jp 
 　 　 上 式 成立 时 的 任务分配 W 达到 P1 , P2 , … , Pp 的 临界 本地性 水平 ， T ( x ) 最小 。 
 　 　 ( 2 ) 使 超步 的 数目 最小化 ， 因为 可以 减少 L 的 次数 。 
 　 　 ( 3 ) 合并 发 往 相同 处理器 的 多个 消息 ， 使 每个 超步 的 通信 启动 开销 至多 为 p - 1 次 。 
 3 结束语 
 　 　 这里 给出 异构计算 环境 中 的 BSP 模型 ( HBSP ) 和 程序 开销 计算方法 。 原 BSP 模型 要求 处理机 间通信 满足 h - relation 关系 ， HBSP 模型 中则 不再 有 此 限制 ， 为 算法 和 程序设计 提供 更 多 的 自由 。 在 处理机 速度 相同 的 情况 下 ， 即 P * i = 1 ( i = 1 … p ) 时 ， 且 各 处理机 上 所 分配 的 计算 量 与 通信量 完全 均衡 时 ， ( 1 ) 和 ( 3 ) 式 可 转化 为 BSP 的 标准 开销 模型 ： 
 　 　 C ( x ) = maxwi + maxhi . g + L = w + h . g + L 
 　 　 Ti = Tcompi + Tcommi + Tsyni = ( w + h . g + L ) / S 
 　 　 其中 ： { pj 的 本地 计算 时间 } ， { pj 的 机 间通信 时间 } ， S 为 构成 BSP 计算机 的 单个 处理器 的 执行 速度 。 
 　 　 即 ： 当 构成 BSP 计算机 的 各 处理机 速度 相同 且 原有 BSP 算法 达到 最优 ( 即 各 处理机 上 所 分配 的 计算 量 与 通信量 完全 均衡 ) 时 ， 异构 BSP 开销 模型 等同于 原有 模型 。 
 * 基金项目 ： 国家自然科学基金 
 作者简介 ： 黄 伟民 ( 1970 ～ ) ， 男 ， 博士生 ， 主要 研究 领域 ： 并行 与 分布式 处理 
 作者 单位 ： 上海交通大学 计算机科学 与 工程系 ， 上海 　 200030 
 参考文献 
 1SunderamV . HeterogeneousNetworkComputing : TheNextGeneration . JournalofParallelComputing , 1997 , 23 : 121 - 170 
 2BilardiG . BSPvsLogP . In8thACMSymp . onParallelAlgorithmsandArchitectures , 1996 : 25 - 32 
 3McCollWF . Scalability , PortabilityandPredictability : TheBSPApproachtoParallelProgramming . JournalofFutureGenerationComputerSystems , 1996 , 12 ( 4 ) : 265 - 272 
 收稿 日期 ： 1998 - 11 - 30 
