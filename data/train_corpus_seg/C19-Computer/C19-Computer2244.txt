计算机 应用 研究 
 APPLICATIONRESEARCHOFCOMPUTERS 
 2000Vol.17 No.3 P.87 - 90 
 
 
 
 
 网络 多功能 气象 计算器 的 开发 与 使用 
 苗 春生 　 CharlesDuncan 　 PeterDouglas 
 摘 　 要 ： 介绍 了 开发 气象 网上 计算器 的 目的 、 用途 、 基本 结构 及 主要 的 开发 语言 。 重点 阐述 了 计算器 开发 中 的 技术 处理 、 编程 技巧 及 计算 气象 物理 参量 的 数学 表达式 推导 等 。 最后 提出 了 该 计算器 尚存 的 不足 及 未来 改进 增强 其 功能 的 设想 。 
 关键词 ： 气象 计算器 网上 运行 JavaScript 语言 气象 物理量 计算 
 0 　 引言 
 　 　 气象 科学 是 理论性 和 实践性 很强 的 科学 。 无论是 在 理论 研究 还是 在 气象 业务 实际 工作 中 都 需要 进行 大量 的 精确 计算 和 数据处理 ， 因此 一个 方便 实用 的 具有 科学计算 功能 和 气象 物理量 计算 功能 的 计算器 是 十分 有用 的 。 目前 国外 也 有用 C语言 和 ToolBook 平台 开发 的 简易 气象 计算器 ( 澳大利亚 气象局 训练 中心 ) 但仅 适合 于 在 PC机 上 安装 软件 ， 单机 运行 。 此外 ， 该 计算器 的 结构 像 一 本书 ， 仅 有 的 少量 功能 还 在 不同 页面 上 ， 因 使用 不便 ， 使用 范围 很 有限 。 随着 网络 技术 的 发展 尤其 是 环球网 ( WWW ) 技术 的 迅速 普及 ， 使得 大量 有用 的 资料 、 方法 和 工具 在 全球 范围 内 共享 成为 可能 。 现在 任何 有用 的 网络工具 都 会 受到 使用者 的 欢迎 并 产生 巨大 的 效益 。 本文 介绍 的 网络 运行 计算器 ， 就是 本文 作者 在 英国 从事 欧洲 气象 教育 训练 计划 ( EuroMETE ) 工作 期间 为 上述 目的 而 开发 的 多功能 网络 计算器 。 目前 该 计算器 已 在 英国 爱丁堡大学 气象 系 主页 和 欧洲 气象 教育 训练 网页 上 运行 。 以下 简称 为 气象 计算器 。 
 1 　 气象 计算器 的 基本功能 
 　 　 从图 1 可以 看出 气象 计算 的 器 简洁明了 。 上部 的 两个 窗口 分别 显示 输入 / 输出 的 数值 及 相应 的 量纲 单位 。 Help 和 Constant 是 两个 超文本 链 ， 为 用户 提供 帮助 和 有用 的 数学 、 物理 及 气象 物理量 的 计算 输出 ( Output ) 。 
 1.1 　 数学计算 功能 
 　 　 在 数学计算 功能 中 包括 了 最常 使用 的 数学计算 功能 ， 例如 ： 对数 、 指数 、 三角函数 、 特殊 函数 、 求和 、 随机数 等 。 为 使 程序 短小精干 ， 本 计算器 在 计算 时 多数 调用 了 JavaScript 程序 中 的 内置 对象 Math ( ) 的 方法 。 对于 处理 字符串 对象 中 的 数字 表达式 和 比较 表达式 等 则 使用 了 JavaScript 中 非常 有用 的 eval ( ) 函数 。 例如 在 本 计算器 中 执行 与 等 号 “ = ” 功能 有关 的 程序 就 调用 了 该 函数 。 其 函数 语句 如下 ： 
 functionequal ( operation ) { 自定义 函数 。 
 　 varform = operation . form ; 声明 局域 变量 。 
 　 varexpression = total + lastOperation + form . display . value ； 
 　 　 　 　 　 　 构建 计算 表达式 并 声明 对应 变量 。 
 　 total = eval ( expression ) ； 
 　 　 　 　 　 　 　 调用 eval ( ) 函数 处理 表达式 并 赋值 到 全局变量 total 。 
 　 form . display1 . value = total ； 在 显示 窗 display 中 ， 显示 计算结果 。 
 } 
 1.2 　 气象 物理量 的 计算 功能 
 　 　 在 气象 计算 功能区 中 ， 首先 要 根据 不同 的 计算 目的 输入 最 基础 最 常规 的 4 个 气象观测 值 ， 即 干球温度 T 、 湿球温度 Tw 、 气压 P 、 全风 矢 V 及 观测点 的 海拔高度 H 和 所在 纬度 L 中 的 一个 或 其中 几个 初始 数据 。 然后 点击 物理量 的 计算 按钮 ， 就 可 得到 需要 的 计算 值 。 目前 可 计算 的 气象 物理量 见表 1 。 
 表 1 　 气象 参量 表 
 
 气象 物理量 单位 需要 输入 的 初始 量 
 Td 露点 温度 摄氏度 T 和 Tw 
 F 华氏温度 华氏度 T 
 C 摄氏温度 摄氏度 T 
 Ta 位温 摄氏度 T 和 P 
 Tv 虚温 摄氏度 T ， Tw 和 P 
 Fh 相对湿度 百分比 T 和 Tw 
 E 水汽 压 毫巴 Tw 
 Es 饱和水汽 压 毫巴 T 
 S 比湿 克 / 千克 T ， Tw 和 P 
 Ss 饱和 比湿 克 / 千克 T ， Tw 和 P 
 Lcl 抬升 凝结 高度 μ T 和 Tw 
 Ek 动能 ( 米 * 秒 ) 平方 V 
 Ep 位能 ( 米 / 秒 ) 平方 H 
 Et 显 热能 卡 / 克 T 和 Tw 
 Ee 潜热 能卡 / 克 T ， Tw 和 P 
 Te 总 能量 卡 / 公斤 T ， Tw ， P ， V 和 H 
 Tt 总 温度 摄氏度 T ， Tw ， P ， V 和 H 
 Ts 饱和 总 温度 摄氏度 T ， Tw ， P 和 H 
 Bt 罗斯 贝 参数 1 / ( 米 * 秒 ) L 
 F 地转 参数 1 / 秒 L 
 
 1.3 　 数学 物理 和 气象 常量 表 
 　 　 气象 计算器 的 Constant 连接 着 气象 工作者 最 常用 的 数学 物理 常数 表 和 气象 常数 表及 度量衡 、 里程 等 单位 换算表 。 Help 为 用户 提供 了 计算器 使用 指导 和 各 物理量 功能 说明 。 使用者 只要 单击 Constant 或 Help 字符 标记 ， 就会弹 出 一个 窗口 ， 同时 浏览器 根据 其 URL 就 可 方便 地 取回 相应 的 文本 ， 供 用户 参考 使用 ( 如图 2 所示 ) 。 为了 使 用户 不 离开 计算器 就 可 阅读 Constant 和 Help 的 内容 ， 本 应用程序 中 使用 了 如下 方法 ： 定义 调用函数 、 用 事件 句柄 触发 某项 动作 、 创建 新窗口 并 控制 其 外观 和 使用 窗口 对象 的 close ( ) 功能 等 ( 相关 程序 略 ) 。 
 
 图 2 　 气象 计算器 帮助 窗口 
 2 　 开发 气象 计算器 所用 的 编程语言 和 工具 
 　 　 该 网络 计算器 主要 由 JavaScript 语言 编成 的 ， 但 也 涉及 到 HTML 语言 、 CGI 程序 和 Table 编程技术 。 
 　 　 ． JavaScript 语言 是 近几年 开始 流行 的 Web 编程语言 ， 其 特点 是 近似 自然语言 并 有 较 强 的 多媒体 处理 功能 并 可不 经过 编译 就 能 在 常用 的 Netscape 和 Explorer 浏览器 上 运行 。 它 与 目标 定向 语言 Java 具有 相同 的 句法结构 而且 其 源代码 可以 直接 嵌入 Web 页 中 ， 使 静态 网页 具有 交互性 。 它 是 创建 计算机 和 互联网 应用程序 不可多得 的 工具 。 
 　 　 ． HTML 语言 是 超文本 定向 语言 ， 是 目前 网页 编辑 的 主要 语言 ， 因而 也 是 网络 教学 训练 软件 的 主要 制作 工具 。 
 　 　 ． CGI 即 公共 网关 界面 ， 是 服务器软件 和 用户 软件 的 交集 ， 在 CGI 程序库 中 ， 有 大量 的 公共 应用软件 ， 例如 数学 软件包 、 交互 表格 等 可 由 用户 编程 调用 ， 这样 就 可为 用户 节省 大量 的 编程 时间 。 
 　 　 ． Table 因其 具有 较强 的 人机交互 功能 ， 因而 目前 是 Web 上 最 常用 的 动态 表格 制作 工具 。 气象 计算器 的 基本 外型 及 数据 输入 ， 计算 功能 执行 所 使用 的 按钮 ( Button ) 均 来自 于 Table 技术 。 
 3 　 开发 过程 中 的 编程技术 处理 
 3.1 　 程序 特点 
 　 　 气象 计算器 程序 充分利用 了 JavaScript 面向对象 的 语言 特性 ， 特别 是 表格 处理 技术 及 自定义 函数 功能 。 两千多 条 语句 、 56 个 自定义 函数 使得 程序结构 有 相当 的 复杂性 。 但 由于 程序模块 清晰 、 高效 ， 使人 易于 理解 。 下面 简介 程序 中 的 若干 特征 。 
 　 　 ． 声明 全局变量 
 　 　 本 程序 的 开头 共 声明 了 27 个 全局变量 ， 大部分 用于 计算 气象 物理量 。 而 用于 数学计算 功能 的 3 个 全局变量 是 ： Total , LastOperation 和 Newnumber 。 
 　 　 Total 变量 包含 了 当前 用户 计算结果 的 总和 ， 其值 与 当前 显示 在 数据 显示 窗中 的 数值 相同 。 
 　 　 Newnumber 是 布尔 型 变量 ， 主要 用于 判别 执行 计算 。 
 　 　 LastOperation 变量 是 为了 保存 用户 要 执行 的 最后 一个 运算符 ， 便于 把 Total 和 最近 输入 的 数 Newnumber 进行 运算 。 这些 变量 必须 通过 赋 初值 来 进行 说明 。 其 说明 语句 为 ： 
 Vartotal = 0 ； 
 VarlastOperation = " + " ； 
 Varnewnumber = true ； 
 　 　 LastOperation 的 初值 是 “ + ” ， 而 Total 的 初始值 是 “ 0 ” ， 这 就 保证 了 用户 输入 的 第一个 有效 数据 能 被 正确 存入 变量 Total 中 ， 因为 在 程序 中 输入 的 第一个 数据 将 通过 LastOperation ( 初值 是 “ + ” 操作 ) 与 Total 的 初值 “ 0 ” 相加 ， 其 结果 必然 是 这个 数 本身 。 Newnumber 的 初值 为 “ True ” 是 执行 数学计算 前赋 初值 和 进行 布尔 变量 判别 所 需要 的 。 
 　 　 ． 浮点数 运算 
 　 　 为了 具有 浮点数 运算 功能 ， 本 计算器 程序 使用 了 JavaScript 的 内部 Mathfloor ( ) 方法 ， 字符串 对象 的 Substring ( ) 方法 ， 字符串 属性 Length 以及 逻辑运算 “ ∣ ∣ ” 功能 。 首先 对 进行 浮点运算 的 一个 输入 值先 进行 有效 整数 或 浮点数 判别 ， 然后 进行 取整 处理 ， 最后 恢复 或 转变 为 浮点 值 。 其 相关 的 函数 程序段 如下 ： 
 functiondecimalPoint ( form ) { 定义 一个 浮点数 处理函数 。 
 varlastChar = form . display1 . value . length ； 
 　 　 　 　 　 　 　 把 输入 数据 的 字符 个数 存入 局域 变量 lastchar 中 。 
 varpnumb1 = form . display1 . value ； 
 　 　 　 　 　 赋 输入 的 数值 给 局域 变量 pnumb1 
 Cif ( ( Math . floor ( form . display1 . value ) = = form . display1 . value 
 　 　 　 　 　 　 　 当 输入 值 是 整数 时 
 　 | | ( pnumb1 . substring ( lastChar , lastChar ) = = " . " ) ) { 
 　 　 　 　 　 　 　 　 或 输入 数值 的 最后 字符 是 “ . ” 即 浮点数 时 
 　 Math . floor ( form . display1 . value ) ； 
 　 　 　 　 　 　 　 　 整数 和 浮点数 均 进行 取整 处理 。 
 　 form . display1 . value + = " . " ； 恢复 或 转换成 浮点数 。 
 　 } 
 } 
 　 　 从 程序 可 看出 ， 对于 用户 可能 键入 两个 以上 小数点 的 特殊 情况 也 具有 自动 纠正 功能 。 
 　 　 ． 查错 功能 Functionsofchecking 本 计算器 程序 有 较 好 的 检查 错误 功能 。 在 进行 计算 时 ， 如果 用户 执行 了 一个 特殊 的 操作 ， 例如 用 “ 0 ” 作 除数 ， 显然 这是 常规 数学 不 允许 的 错误 。 该 计算器 首先 检查 输入 数值 是否 在 允许 范围 之内 ， 然后 检查 除数 是否 为 “ 0 ” 。 若 除数 为 “ 0 ” ， 计算器 显示 窗 中将 显示 警告 信息 并 删除 显示 窗中 的 数据 。 其 有关 程序段 如下 ： 
 functioncalculate ( operation ) { 数学计算 函数 
 　 varform = operation . form ； 
 　 if ( chkrange ( form ) { 调用 chkrange 函数 进行 有效 数据 范围 检查 。 
 　 if ( chkerror ( form ) ) { 调用 chkerror 函数 进行 除数 为 0 错误 检查 。 
 　 varexpression = total + lastOperation + form . display1 . value ； 
 　 lastOperation = operation . value ; 无错 则 开始 计算 操作 。 
 　 total = eval ( expression ) ; form . display1 . value = total ； 
 　 newnumber = true ； 
 　 } else { 
 　 　 　 alert ( " Youcan ' tdividebyzero ! " ) ; 有 错 ， 提出 警告 。 
 　 　 　 form . display1 . value = " " ; 删除 输入 的 数据 。 
 　 　 　 } 
 　 } 
 } 
 functionchkrange ( form , low , high , ) { 数据 有效 范围 检验函数 
 　 ifform . display1 . value ! = " " { 
 　 　 if ( ( form . display1 . value > low | | ( form . display1 . value < high ) ) { 
 　 　 newnumber = true ； 
 　 　 } else { 
 　 　 　 alert ( " beyondtherange ! " ) ； 
 　 　 　 form . display1 . value = " " ； 
 　 　 } 
 functionchkerror ( form ) { 检查 除数 的 函数 
 　 varnoerror = true ； 
 　 if ( ( lastOperation = = " / " && ( form . display1 . value = = 0 ) ) { 
 　 noerror = false ； 
 　 returnnoerror ； 
 } 
 　 　 ． 两个 输入输出 窗口 
 　 　 气象 计算器 输出 的 物理 参量 必须 带有 量纲 和 单位 ， 为此 本 气象 计算器 利用 HTML 的 < Table > 标记 功能 设置 了 两个 文本 域 Display1 ( 2 ) 。 一个 用作 输出 输入 数据 窗口 ， 而 另 一个 则 自动 显示 对应 的 量纲 单位 。 请 参见 图 1 。 
 　 　 两个 文本 域 窗口 的 有关 设定 如下 ： 
 < Inputtype = textwidth = 12name = display1size = 8value = " 0.0 " > 
 < inputtype = textwidth = 12name = display2size = 8value = " " > 
 　 　 该 计算器 原始数据 的 输入 使用 了 表格 的 Button 属性 结合 JavaScript 的 事件 句柄 onClick ( ) 来 进行 的 。 
 　 　 以 输入 温度 数据 为例 ： 
 < Inputtype = buttonname = " Temperature " value = " T " 
 　 　 onClick = " clearFirst ( this ) ; " > 
 　 　 当 用户 单击 温度 输入 键 T 时 ， 事件 句柄 onClick ， 就 会 立即 触发 自定义 函数 clearFirst ( ) 的 功能 。 
 functionclearFirst1 ( digit ) { 温度 T 数据 输入 函数 
 　 　 displ1 ( digit ) ； 
 　 　 varform = digit . form : 
 　 　 form . display1 . value = " " ； 
 　 　 enterNumber ( digit ) ； 
 } 
 　 　 clearFirst1 ( ) 函数 在 接收 温度 数据 之前 ， 首先 调用函数 Displ1 ( ) 清除 显示 窗口 Display2 中原 有 的 信息 并 显示 出 要求 输入 温度 的 单位 “ Kelvin ” 。 然后 清除 显示 窗口 Display1 中原 有 的 数据 ， 最后 调用函数 enterNumber ( ) 接收 用户 输入 的 新 数据 。 
 functiondispl1 ( digit ) { 
 　 　 varform = digit . form ； 
 　 　 form . display2 . value = " " ； 
 　 　 form . display2 . value = " kelvin " ； 
 } 
 　 　 ． 气象 初始 数据 的 输入 
 　 　 气象 4 个 观测 数据 ： 气压 ( P ) 、 干球温度 ( T ) 、 湿球温度 ( Tw ) 、 风 ( V ) 及 观测点 的 纬度 ( L ) 和 海拔高度 ( H ) 是 计算 大部分 气象 物理量 的 初始值 。 因此 ， 准确 获取 这些 数据 是 进行 计算 的 基础 。 如上所述 ， 该 计算器 程序 的 数据 输入 是 通过 结合 Button 表项 和 onClick 事件 句柄 而 进行 的 ， 因此 ， 为了 让 计算器 区别 每 一个 输入 的 值 。 在 程序 中 每 一个 数据 的 第一个 字符 均 为 大写 的 英文字母 。 例如 ： 键入 气压 时其值 的 第一个 字符 为 P ， 温度 值 的 首个 字符 是 T 。 但是 为了 把 不带 字母 的 准确 数据 存储 在 相应 的 全局变量 中 ， 为 其后 的 变量 使用 ， 在 数据 获取 自定义 函数 Getdata ( ) 中 使用 了 字符串 的 Substring ( ) 方法 ， charAt ( ) 方法 以及 字符串 属性 Length 。 相应 的 程序段 如下 ： 
 functiongetdata ( form ) { 获取数据 函数 
 varnum1 = form . display1 . value ； 
 　 　 　 　 把 窗口 中 显示 的 数据 赋值 到 局域 变量 numb1 中 。 
 varlength1 = numb1 . length ； 
 　 　 　 　 使用 length 属性 标记 输入 数据 的 字符 数 。 
 　 varnum11 = numb1 . substring ( 1 , length1 ) ； 
 　 　 　 　 使用 substring ( ) 方法 截取 num1 中 的 有用 数据 。 
 　 varnumb12 = numb1 . charAt ( 0 ) ； 
 　 　 　 　 使用 charAt ( ) 方法 抽出 第一个 字符 。 
 　 　 　 if ( numb12 = = " P " ) { 判别 是 哪 一个 气象 值 。 
 　 　 　 pppp = numb11 ; 存储 在 相应 的 全局变量 中 。 
 　 　 　 } 
 　 　 　 if ( numb12 = = " T " ) { 
 　 　 　 ttc = eval ( numb11 - 273.15 ) ； 存储 温度 为 摄氏温标 。 
 　 　 　 tttt = ttc ； 把 温度 值 赋予 全局变量 tttt 。 
 　 　 　 } 
 　 　 　 ┆ 　 　 其它 气象 初值 赋值 程序段 。 
 　 　 　 form . display1 . value = numb11 ； 
 　 　 　 newnumber = true ； 
 　 　 　 form . display1 . value = " " ； 
 3.2 　 气象 参量 的 计算 
 　 　 常用 气象 物理量 的 计算 是从 该 物理量 的 常用 表达式 编程 计算 得到 的 。 例如 位温 计算 就 来自 于 位温 的 表达式 ( 1 ) 。 
 　 　 　 　 　 　 　 ( 1 ) 
 式 中 ： θ 是 位温 ， T 是 气温 ， P 是 某 一位 势 高度 上 的 气压 ， 而 A 是 功 热当量 ， Rd 和 Cpd 分别 为 干 空气 气体 常数 和 干 空气 的 定压比热 。 
 　 　 部分 气象 参数 的 计算 式 却 需要 利用 其它 气象 参量 表达式 及 本身 相关 物理 定义 推导 得来 。 例如 ： 露点 温度 的 计算 式 ( 3 ) 就 是从 温度 ( 摄氏 ) 与 饱和水汽 压 ( 毫巴 ) 的 关系式 ( 2 ) 与 露点 温度 的 物理 定义 推导 而来 的 。 饱和水汽 压 和 温度 的 关系式 为 ： 
 es = 6.11 × 107.5 T / ( T + 237.3 ) 　 　 　 　 　 　 ( 2 ) 
 式 中 es 就是 气温 T 所 对应 的 饱和水汽 压 。 
 　 　 因为 湿球温度 对应 的 水汽 压 就是 同 时刻 露点 温度 对应 的 饱和水汽 压 。 因此 ， 用 湿球温度 Tw 代替 饱和水汽 压 公式 ( 2 ) 的 气温 T ， 得到 露点 温度 对应 的 饱和水汽 压 表达式 ( 略 ) ， 进而 推 得 露点 温度 的 计算 表达式 ( 3 ) 。 
 　 　 　 　 　 　 ( 3 ) 
 式 中 Td 是 露点 温度 ， ew 是 湿球温度 Tw 对应 的 水汽 压 ， 同时 也 是 露点 温度 对应 的 饱和水汽 压 。 
 　 　 相应 的 露点 温度 计算 程序段 如下 ： 
 functionTdTd ( form ) { 
 　 with ( Math ) { 
 　 　 　 　 　 　 　 使用 对象 Math , 说明 该 程序段 将 调用 内置 数学 函数 。 
 　 varn0 = parseFloat ( tttt ) ； 
 　 　 　 　 使用 内置 函数 parseFloat 把 带有 单位 的 温度 和 露点 
 　 varn1 = parseFloat ( twtw ) ； 
 　 　 　 　 变量 转换成 纯 浮点数 ， 以便 计算 。 
 　 varn2 = ( 7.5 xn1 ) / ( n1 + 237.3 ) ； 
 　 varn3 = 6.11 xMath . pow ( 10 , n2 ) ； 
 　 varnn12 = n3 . toString ( ) ； 把 数值 型 变量 n3 转换成 字符串 。 
 　 form . display1 . value = nn12 . substring ( 0 , 9 ) ； 
 　 varn4 = n3 - 0.666 x ( n0 - n1 ) ； 
 　 varn11 = eval ( log ( n4 ) / log ( 10 ) ) ) ； 
 　 varn12 = eval ( log ( 6.11 ) / log ( 10 ) ) ； 
 　 varn5 = eval ( 237.3 x ( n11 - n12 ) ) : 
 　 varn6 = eval ( 7.5 - ( n11 - n12 ) ) ； 
 　 varn7 = n5 / n6 ; tdtd = n7 ； 
 　 vartdtd1 = tdtd . toString ( ) ； 把 数据 型 变量 转变成 字符串 变量 。 
 　 form . display1 . value = tdtd1 . substring ( 0 , 5 ) ； 
 　 　 　 使用 字符串 substring ( ) 方法 ， 使 露点 值 精确 到 5 位数 。 
 　 form . display2 . value = " C - degree " ； 
 　 　 　 　 在 第二个 显示 窗中 显示 露点 的 单位 。 
 　 } 
 } 
 4 　 不足 和 进一步 的 改进 
 　 　 本 气象 计算器 已经 在 英国 爱丁堡大学 气象 系 主页 和 欧洲 气象 教育 培训 网页 上 运行 。 不久 的 将来 它 也 会 在 中国 气象 教育 培训 网络 课程 页面 上 出现 ， 为 中国 气象 教育 和 气象 科研 服务 。 但是 必须 指出 ， 由于 JavaScript 是 个 发展 中 的 语言 ， 其 功能 尚有 不 完善 之 处 ， 例如 onMouseOver 句柄 就 不能 应用 于 Button 之上 ， 来 触发 事件 的 发生 ， 为 用户 带来 更 多 的 方便 。 而且 本 计算器 目前 尚无 实时 绘图 及 图表 显示 能力 。 因此 ， 在 下一阶段 ， 我们 将 结合 Java 语言 和 CGI 程序 来 增强 该 气象 计算器 的 实用功能 。 增加 同时 显示 多个 气象 参数 ， 计算 绘图 及 图形 显示 等 有用 功能 ， 以及 常用 数学 物理 手册 和 中英文 大气 科学 词典 等 辅助 内容 。 
 苗 春生 ( 南京 气象 学院 气象台 南京 210044 ) 
 CharlesDuncan ( 英国 爱丁堡大学 气象 系 ) 
 PeterDouglas ( 英国 爱丁堡大学 气象 系 ) 
 参考文献 
 1IanBell , ToolBookCalculator , PersonalCommunication , CALMET97CD _ ROM , Australia.1998 
 2DavidFlanagan . JavaScriptTheDefinitiveGuide , secondEdition , PublishedbyO ' Reilly & Associates , Inc . U . S . A1997 
 3JohnT . Houghton . ThephysicsofAtmospheres , secondEdition , PublishedbythePressSyndicateoftheUniversityofCambridge . U . K.1986 
 4JamesR . Holton . AnIntroductiontoDynamicMeteorology , thirdEdition , PublishedbyAcademicPressLimited , U . K.1992 
 5CharlesN . Duncan . MeteorologicalTeachingMaterial , Dpat . ofMeteorology , TheUniversityofEdinburgh . U . K . 
 收稿 日期 ： 1999 年 9 月 28 日 
