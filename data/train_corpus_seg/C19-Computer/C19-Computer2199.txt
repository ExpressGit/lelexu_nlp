计算机 应用 研究 
 APPLICATIONRESEARCHOFCOMPUTERS 
 2000 　 Vol.17 　 No.2 　 P.77 - 78 , 76 
 
 
 
 基于 VBA 和 EXCEL 的 ARENA 仿真 输出 可视化 表达 
 武振业 　 朱连喜 
 摘要 首先 介绍 了 Arena 软件 的 应用环境 和 MicrosoftVisualBasicforApplication ( VBA ) 在 Arena 中 的 应用 。 以 一个 营销 咨询 与 服务 系统 为例 ， 通过 建立 Arena 仿真 模型 ， 在 Arena 中 添加 VBA 模块 ， 实现 了 VBA 调用 Excel ， 从而 丰富 了 Arena 的 仿真 输出 。 
 关键词 VBAExcelArena 仿真 输出 可视化 技术 
 1 引言 
 　 　 Arena 是 由 SystemModelingCorporation 于 1993 年 研制开发 的 新一代 动画 仿真 集成 环境 ， 1998 年 向 市场 推出 了 更为 成熟 的 Arena3.0 版 。 Arena 作为 一个 具有 柔性 的 强有力 的 动画 仿真 工具 ， 它 不仅 能够 生成 准确 的 动画 模型 ， 并且 它 是 面向对象 设计 、 有 实际 输出 定制 的 独特 功能 的 动画 仿真 工具 。 Arena 可以 与 Office97 进行 信息 交换 ， 通过 VBA ( VisualBasicforApplication ) 对 其 操作 ， 丰富 了 Arena 的 输入输出 表现形式 ， 使得 通过 仿真 进行 决策 更 易 实现 。 本文 将 根据 一个 仿真 模型 运行 的 结果 ， 利用 VBA 调用 Excel ， 进一步 形象 、 直观 地 表示 Arena 仿真 输出 结果 。 
 2VBA 在 Arena 中 的 应用 
 　 　 Arena3.0 是 世界 上 第一个 包含 VBA 的 仿真 模拟 软件 。 在 安装 Arena 时 ， VBA 将会 自动 安装 ， 因此 无需 专门 购买 VBA 。 通过 在 Arena 中 执行 VBA 代码 ， 可以 实现 MicrosoftActiveXAutomation ； 在 一个 仿真 模拟 运行 前 显示 一个 表格 ， 要求 使用者 设置 模拟 运行 中所 需 的 参数 ； 在 仿真 模拟 运行 中 ， 当 缓冲器 超过 某一 条件 限制 时 发出 “ 报警 ” 等 。 为了 在 Arena 中 使用 VBA ， 需在 仿真 模型 中 设置 VBA 模块 。 VBA 模块 在 ArenaBlock 的 面板 中 ， 它 可以 使得 在 仿真 中 利用 一个 实体 引发 并 执行 VBA 代码 。 
 　 　 在 Arena 中 应用 VBA 时 ， 打开 VisualBasicEditor ( VBE ) ， 可以 使用 VBE 创建 、 浏览 、 调试 或 运行 一个 Arena 模型 中 的 VBA 程序 。 利用 VBE ， 可 在 VBA 工程 文件 中 嵌入 模块 、 类 模块 等 ； 在 ProjectExplore 中 选择 一个 Arena 文件 中 的 工程 来 浏览 VBA 工程项目 ； 在 ProjectExplore 中 打开 所 需 的 文件夹 ， 并 双击 工程项目 浏览 VBA 代码 ； 通过 设置 断点 ， 调试 VBA 程序 ； 在 VBE 的 Macros 菜单中选择 Run 项可 运行 VBA 程序 。 
 　 　 该 模型 描述 了 一个 实际 的 电话 服务 系统 。 系统 主要 提供 产品 技术咨询 、 产品销售 信息 和 产品 订购 服务 。 系统 中共 有 26 条 电话 线路 ， 服务 时间 从 上午 8 : 00 至 下午 6 : 00 。 在 服务 时间 内 的 不同 时间段 内 ， 系统 接到 的 电话 频率 ( 每 小时 接到 的 电话 数 ) 变化 较大 。 表 1 给出 了 不同 时段 系统 接到 的 电话 数 。 
 表 1 电话 接收 频率 ( 次数 / 小时 ) 
 时间 频率 时间 频率 时间 频率 时间 频率 
 8 : 00 ～ 8 : 302010 : 30 ～ 11 : 00751 : 00 ～ 1 : 301103 : 30 ～ 4 : 0090 
 : 00 ～ 9 : 304511 : 30 ～ 12 : 00902 : 00 ～ 2 : 301054 : 30 ～ 5 : 0065 
 9 : 30 ～ 10 : 005012 : 00 ～ 12 : 30952 : 30 ～ 3 : 00905 : 00 ～ 5 : 3045 
 10 : 00 ～ 10 : 307012 : 30 ～ 1 : 001053 : 00 ～ 3 : 30855 : 30 ～ 6 : 0030 
 　 　 应用 Arena 建立 系统 模型 ， 使该 模型 重复 模拟 10 次 ， 每次 模拟 660 分钟 ( 从 上午 8 : 00 ～ 下午 6 : 00 ) 。 
 　 　 下面 将 在 电话 服务中心 的 模型 中 利用 VBA 调用 Excel ， 首先 在 Excel 中 记录 系统 接到 电话 的 时刻 、 顾客 接受 服务 后 离开 系统 的 时刻 和 系统 为 顾客 服务 的 持续时间 ， 然后 将 顾客 接受 服务 的 持续时间 的 变化 情况 在 Excel 中用 线形 图 表示 出来 。 
 3.1 仿真 模拟 开始 时 的 VBA 事件 代码 
 　 　 为了 保存 模拟 运行 中 产生 的 数据 ， 首先 创建 Excel 文件 。 在 模型 开始 重复 模拟 运行 前 ， 在 数据 栏上 写 上 标题 ， 可 使用 两个 Arena 内建 的 VBA 事件 ： RunBeginSimulation 和 RunBeginReplication 。 即 在 仿真 运行 开始 时 调用 RunBeginSimulation ， 在 该 事件 中 放入 运行 Excel 和 创建 新 的 工作 表 的 代码 ， 在 每次 重复 模拟 开始 时 调用 RunBeginReplication 事件 ， 该 事件 将 把 标题 写入 数据 栏中 ， 图 1 就是 这 两个 过程 的 部分 代码 和 一些 全局变量 的 声明 。 
 Dimg _ SIMANAsArena . SIMAN , g - CallInIndexAsLong 
 Dimg _ XLAppAsExcel . Application , g _ XLWorkbook 
 　 　 AsExcel . Workbook , _ g _ XLDataSheetAsExcel . Worksheet 
 Dimg _ nextRowAsLong , g _ colAAsLong , g _ colBAsLong , g _ colC 
 　 　 AsLong 
 PrivateSubModelLogic _ RunBeginSimulation ( ) 
 　 Setg _ SIMAN = ThisDocument . Model . SIMAN 
 　 g _ CallInIndex = g _ SIMAN . SymbolNumber ( " CallIn " ) 
 　 Setg _ XLApp = CreateObject ( " Excel . Application " ) 
 　 g _ XLAppVisible = True 
 　 g _ XLApp . SheetsInNewWorkbook = 1 
 　 Setg - XLWorkbook = g _ XLApp . Workbooks . Add 
 　 Setg - XLDataSheet = g _ XLWorkbook . ActiveSheet 
 　 Withg _ XLDataSheet 
 　 　 . Name = " 电话 呼叫 数据 " 
 　 　 . Rows ( 1 ) . Select 
 　 　 g _ XLApp . Selection . Font . Bold = True 
 　 　 g _ XLApp . Selection . Font . Color = RGB ( 255 , 0 , 0 ) 
 　 　 . Rows ( 2 ) . Select 
 　 　 g _ XLApp . Selection . Font . Bold = True 
 　 　 g _ XLApp . Selection . Font . Color = RGB ( 0 , 0 , 255 ) 
 　 EndWith 
 EndSub 
 PrivateSubModelLogic _ RunBeginReplication ( ) 
 　 DimreplNumAsLong , iAsInteger 
 　 replNum = g _ SIMAN . RunCurrentReplication 
 　 g _ colA = ( 4 * ( replNum - 1 ) ) + 1 
 　 g _ colB = g _ colA + 1 
 　 g _ colC = g _ colA + 2 
 　 Withg _ XLDataSheet 
 　 　 . Activate 
 　 　 . Cells ( l , g _ colB ) . Value = " 第 " & replNum & " 天 " 
 　 　 . Cells ( 2 , g _ colA ) . Value = " 开始 时刻 " 
 　 　 . Cells ( 2 , g _ colB ) . Value = " 结束 时刻 " 
 　 　 . Cells ( 2 , g _ colC ) . Value = " 持续时间 " 
 　 　 Fori = 0To2 
 　 　 　 . Columns ( g _ colA + i ) . Select 
 　 　 　 g _ XLApp . Selection . Columns . AutoFit 
 　 　 　 g _ XLApp . Selection . NumberFormat = " 0.00 " 
 　 　 Nexti 
 　 　 EndWith 
 　 g _ nextRow = 3 
 EndSub 
 　 　 程序 中 ， 全局变量 声明 部分 是 由 不 包含 在 任何 过程 内 ( 即 在 定义 ModelLogic _ RunBeginReplication 过程 之前 ) 的 代码 组成 ， 它 通过 一系列 的 Dim 声明 ( VisualBasic 变量 声明 语法 ) 定义 了 所有 过程 都 可用 的 全局变量 。 g _ SIMAN 全局变量 放入 RunBeginSimulation 中 指向 模型 的 SIMAN 数据 对象 ， 并 将 在 其余 的 过程 中 用来 从 正在 运行 的 仿真 模型 中 取得 数值 。 其它 以 揈 xcel 斂头 的 全局变量 声明 为 Excel 对象 库 的 对象 变量 。 
 3.2 使用 VBA 模块 保存 系统 模型 进行 电话 服务 的 时间 数据 
 　 　 如图 1 所示 ， 当 在 系统 中 设置 一个 VBA 模块 时 ， Arena 将 为 其 分配 一个 独一无二 的 值 ， 该值 将 模块 与其 在 VisualBasic 工程 中 的 代码 联系 起来 。 这些 数字 都 是从 1 开始 的 整型 数 ， 每新 设置 一个 VBA 模块 其值 就 加 1 。 
 
 图 1 　 VBA 模块 
 　 　 下面 程序 中 ， 与 VBA 相 联系 的 事件 是 VBA _ Block _ 1 _ Fire ( ) ， 其中 1 与 Arena 分配 给 VBA 模块 的 值 相对 应 。 
 PrivateSubVBA _ Block _ 1 _ Fire ( ) 
 　 DimstartTimeAsDouble , runTNOWAsDouble 
 　 StartTime = g _ SIMAN . EntityAttribute ( g _ SIMAN . ActiveEntity , 
 　 　 　 　 　 g _ CallInIndex ) 
 　 runTNOW = g _ SIMAN . RunCurrentTime 
 　 Withg _ XLDataSheet 
 　 　 . Cells ( g _ nextRow , g _ colA ) . Value = startTime 
 　 　 . Cells ( g _ nextRow , g _ colB ) . Value = runTNOW 
 　 　 . Cells ( g _ nextRow , g _ colC ) . Value = runTNOW - startTime 
 　 EndWith 
 　 g _ nextRow = g _ nextRow + 1 
 EndSub 
 　 　 在 上述 程序 中 ， 当 一个 实体 完成 了 进程 并 进入 VBA 模块 时 ， 将 触发 VBA _ Block _ 1 _ Fire 事件 的 代码 。 从而 把 系统 接到 电话 的 时刻 、 顾客 离开 系统 的 时刻 和 系统 为 顾客 服务 的 持续时间 分别 写入 Excel 的 工作 表中 。 如图 2 所示 ， 表中 记录 了 第一天 的 电话 呼叫 数据 。 
 
 图 2 　 在 Excel 中 的 记录 结果 
 3.3 仿真 模拟 结束 时 VBA 事件 代码 
 　 　 下面 程序 中 ， 在 每次 重复 模拟 运行 结束 后 ， Arena 将 调用 VBA 的 RunEndReplication 过程 。 在 该 模型 中 ， 我们 将 包含 在 工作 表 中 摮 中 时间 斃傅 氖 据 制表 ， 用 线形 图来 表示 重复 模拟 期间 顾客 接受 服务 时间 的 变化 情况 ， 如图 3 所示 。 在 仿真 模拟 结 来时 ， RunEndSimulation 过程 被 调用 ， 此处 简单 地 把 Excel 工作 表 保存 到 Model . xel 文件 中 ， 再 将 Excel 应用程序 变量 设为 揘 othing 敚 断开 与 Excel 的 连接 ( 让 Excel 继续 运行 ) 。 
 　 　 Excel 绘制 的 图形 如图 3 。 
 
 图 3 　 系统 为 顾客 服务 持续时间 变化 的 线形 图 
 PrivateSubModelLogic _ RunEndReplication ( ) 
 　 g _ XLDataSheet . Range ( g _ XLDataSheet . Cells ( 3 , g _ colC ) , _ 
 　 　 g _ XLDataSheet . Cells ( g _ nextRow , g _ colC ) ) . Select 
 　 g _ XLApp . Charts . Add 
 　 Withg _ XLApp . ActiveChart 
 　 　 . Name = " 第 " & g _ SIMAN . RunCurrentReplication & " 天 " 
 　 　 . ChartType = x1LineMarkers 
 　 　 . SetSourceDataSource : = g _ XLDataSheet . Range 
 　 　 　 ( g _ XLDataSheet . Cells ( 3 , g _ colC ) , _ g _ XLDataSheet . Cells 
 　 　 　 ( g _ nextRow , g _ colC ) ) , PlotBy : = xlColumns 
 　 　 . SeriesCollection ( 1 ) . XValues = " = ' " & g _ XLDataSheet . Name 
 　 　 　 　 　 & " ? " &_ " R3C " & g _ colB & " : R " & g _ nextRow & " C " 
 　 　 　 　 　 & g _ colB 
 　 EndWith 
 EndSub 
 PrivateSubModelLogic _ RunEnd ( ) 
 　 g _ XLApp . DisplayAlerts = False ' Don ' tprompttooverwrite 
 　 g _ XLWorkbook . SaveAs " Mod _ 10 _ 2 . xls " 
 　 Setg _ XLApp = Nothing 
 EndSub 
 4 结束语 
 　 　 在 这里 ， 我们 根据 一个 实际 的 电话 服务 系统 ， 运用 Arena 建立 仿真 模型 ， 通过 在 Arena 中 加入 VBA 模块 ， 充分利用 了 Excel 的 优势 ， 使得 Arena 仿真 输出 结果 具有 简洁 、 直观 ， 这 对于 运用 仿真 输出 来 进行 决策 是 更 容易 实现 的 。 
 本文 获 国家自然科学基金 资助 ( No.79870035 ) 
 武振业 （ 西南 交通 大学 经济 管理 学院 成都 610031 ） 
 朱连喜 （ 西南 交通 大学 经济 管理 学院 成都 610031 ） 
 参考文献 
 1 ， W . DavidKelton , RandallP . Sadowski , Deborahetal . SimulationwithArena . TheMcGraw － HillCompanies.1998 
 2 ， BrianSiler , JeffSportts 著 . 康博 创作室 译 . VisualBasic6 开发 使用手册 . 北京 : 机械 工业 出版社 , 1999.4 
 收稿 日期 ： 1999 年 9 月 26 日 
