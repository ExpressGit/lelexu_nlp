软件 学报 
 JOURNALOFSOFTWARE 
 1999 年 第 2 期 No.21999 
 
 
 
 非 均匀 区域 油藏 模拟 负载平衡 的 分区 并行算法 * 
 舒 继武 1 , 2 　 赵 金熙 1 , 2 周维四 3 张德富 1 , 2 
 　 　 摘要 　 基于 分布式 并行 计算机系统 , 对 一类 非 均匀 区域 的 油藏 数值 模拟 问题 , 采用 了 区域 分解 方法 并行 求解 , 给出 了 并行 求解 的 负载平衡 模型 及 区域 负载平衡 的 一种 有效 分区 算法 , 从而 将 这类 油藏 数值 模拟 问题 均衡 映射 到 并行 环境 中 , 高效 地 并行 求解 . 在 黑油油 藏 数值 模拟 并行 软件 的 研究 中 , 实验 结果表明 , 该 算法 有利于 提高 加速 比 . 
 　 　 关键词 　 油藏 数值 模拟 , 区域 分解 , 负载平衡 , 并行算法 . 
 　 　 中图法 分类号 　 TP301 
 ZonalParallelAlgorithmofLoad - balancingonNonuniformDomainSimulationofReservoir 
 SHUJi - wu1 , 2ZHAOJin - xi1 , 2ZHOUWei - si3ZHANGDe - fu1 , 2 
 　 　 Abstract 　 Basedonthedistributedparallelenvironment , foroneofthenonuniformdomainnumericalsimulationproblemsofreservoir , theauthorsgiveaload - balancemodelofparallelcomputingandazonalparallelalgorithmofload - balanceusingdomaindecompositionmethod , sosomewellandeffectivesolutionswhichbalanclymapthenonuniformdomainnumericalsimaulationofreservoirtoparallelenvironmentarefound . Inthestudyofblockoilreservoirnumericalsimulationparallelsoftware , thepracticalresultsshowthatthezonalparallelalgorithmcanimprovetheperformanceinspeedup . 
 　 　 Keywords 　 Numericalsimulationofreservoir , domaindecomposition , load - balancing , parallelalgorithm . 
 　 　 油藏 数值 模拟 问题 , 无不 归结为 求解 大型 偏 微分方程 的 问题 . 这类 问题 的 求解 需要 大量 的 计算 时间 , 因此 , 如何 提高 求解 这 类 问题 的 计算速度 成为 人们 非常 关心 的 问题 . 区域 分解 法是 应运而生 的 、 适应 并行 计算机 工作 原理 的 偏 微分方程 数值 算法 . 它 体现 了 “ 分而治之 ” 的 思想 , 受到 计算 数学界 和 工程界 的 热切 关注 . 该 方法 从 问题 的 “ 模型 级 ” 发掘 并行性 , 将 计算 区域分割 成 若干 独立 的 规模较 小 的 子 区域 , 将 原 问题 的 求解 转化 为 各子 区域 上子 问题 的 求解 . 一个 或 若干个 子 问题 用 一个 处理机 来 处理 , 当 所有 的 子 问题 均衡 地 映射 到 多个 处理机 上时 , 通过 并行 求解 子 问题 而 获得 整个 区域 上大 问题 的 解 , 它 有利于 问题 的 并行 求解 , 提高 了 解题 速度 , 具有 广阔 的 应用 前景 . 
 　 　 区域 分解 并行计算 , 在 结合 并行机 的 特有 体系结构 时 , 要 考虑 区域 的 划分 及 负载平衡 . 文献 ［ 1 ］ 基于 二维 网格 连接 的 分布式 并行处理 机 结构 , 在 给出 几种 区域 分解 方法 的 计算 复杂性 和 通信 耗费 的 基础 上 对 其 加速 比 和 效率 进行 了 分析 . 文献 ［ 2 ］ 对 区域 的 网格 划分 与 并行计算 的 效率 进行 了 讨论 , 并 寻找 其 最优 的 网格 分裂 . 它们 都 假设 区域 均匀 , 区域 划分 为 等 大小 的 子 区域 , 认为 子 区域 有 完全相同 的 计算 量 和 通信 要求 . 但 在 实际 的 问题 中 , 如 油藏 模拟 , 油区 经常 是 不 均匀 的 , 而 在 选定 区域 时 , 为了 便于 处理 , 常 选定 一 规则 区域 , 如 长方形 区域 . 若 将 区域 划分 成 与 处理机 数目 相同 的 等 大小 的 子 区域 , 各子 区域 的 收敛 速度 就 不同 , 对应 分配 到 处理机 上将 引起 处理机 的 负载 不 均衡 . 因此 , 要 维持 一种 相对 稳定 的 高效 并行处理 , 需 采用 负载平衡 的 分区 并行计算 方法 . 本文 以 在 油藏 数值 模拟 中 , 运用 区域 分解 方法 并行 求解 非 均匀 区域 的 黑油 压力 问题 为 背景 , 给出 了 并行 求解 的 负载平衡 模型 及 区域 负载平衡 的 一种 分区 算法 . 
 1 区域 分解 并行算法 
 　 　 区域 分解 法 主要 有 3 类 : 迭代 子结构 类型 , 子 区域间 无 重叠 ; Schwarz 类型 , 子 区域间 有 重叠 ; 迭代 子结构 和 Schwarz 的 结合 类型 . 
 　 　 下面 以 Schwarz 类型 的 区域 分解 算法 来 说明 其 并行 求解 问题 的 基本 步骤 . 设有 一个 模型 为 : 
 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 1 ) 
 对 区域 Ω 进行 分解 : 令 Ω 有 分解 Ω = Ω i , Ω i 是 开集 , 且 对 每个 i 都 可 找到 j ≠ i , 有 Ω i ∩ Ω j ≠ . 对 
 问题 （ 1 ） 用 平均法 构造 的 并行 Schwarz 方法 如下 ［ 3 ］ : 
 　 　 步骤 1 : 选择 初始 近似 P0 , n ＝ 0 . 
 　 　 步骤 2 : 并行计算 子 区域 上 边值问题 
 　 　 　 　 　 　 　 　 　 　 　 ( 2 ) 
 　 　 步骤 3 : 延拓 Pn + 1i 的 定义 到式 ( 3 ) , 即 定义 
 　 　 　 　 　 　 　 　 　 　 　 　 ( 3 ) 
 并取 平均 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 4 ) 
 置 n = n ＋ 1 , 若 达到 问题 精度 , 则 终止 ; 否则 , 转 步骤 2 . 
 　 　 因此 , 对于 一般 的 数值 计算 问题 , 应用 区域 分解 法 并行 求解 问题 的 基本 过程 为 : 
 　 　 . 将 给定 的 实际 问题 的 求解 区域 , 分割 为 几个 子 区域 . 
 　 　 . 将 各个 子 区域 的 求解 , 归结 于解 线性代数 方程组 . 
 　 　 . 给 各个 处理机 分配 数据 和 任务 . 
 　 　 . 整个 区域 迭代 循环 : 
 　 　 do { 
 　 　 　 处理机 Pi 上子 区域 的 迭代 循环 （ 与 其他 处理机 并行 ） : 
 　 　 　 do { 
 　 　 　 　 　 子 区域 迭代 求解 
 　 　 　 } while （ 未 达到 对应 子 区域 的 收敛 条件 ） 
 　 　 　 求子 区域间 边界 节点 （ 无 重叠 区域 分解 ） 或 公共 区域 （ 重叠 区域 分解 ） 
 　 　 } while （ 整个 区域 未 达到 其 收敛 条件 ） 
 　 　 . 整个 区域 收敛 , 得到 问题 的 解 . 
 2 负载平衡 的 分区 算法 
 　 　 用 区域 分解 方法 求解 , 任务 的 完成 是 等待 最慢 结点 机上 的 消息 , 这样 , 导致 整体 并行 性能 退化 到 与 最慢 结点 机 相同 . 为了 解决 这个 问题 , 需要 做到 : ① 要 提高 网络 传输 性能 ; ② 要 采用 高效 的 算法 , 使得 各子 区域 收敛 速度 最快 ; ③ 要 采用 负载平衡 的 分区 方法 , 使得 每个 结点 机上 完成 的 时间 大致 相等 . 本文 主要 考虑 区域 分解 方法 并行 求解 非 均匀 问题 的 负载平衡 . 
 2.1 非 均匀 区域 的 划分 
 　 　 在 非 均匀 区域 的 油藏 数值 模拟 中 , 有 的 子 区域 由于 包含 更 多 的 “ 死 节点 （ 即 不 需 迭代 计算 的 节点 ） ” , 达到 收敛 条件 时 迭代 次数 很少 , 而 有 的 子 区域 由于 包含 很少 的 “ 死 节点 ” , 达到 收敛 条件 时 迭代 次数 很多 . 若 划分 的 子 区域 数目 大于 处理机 的 个数 , 由于 在 开始 迭代 时 , 不能 估计 出其 迭代 次数 , 为了 能 较 好 地 使 负载平衡 , 子 区域 的 数目 必须 远大于 处理机 的 个数 , 这样 , 由于 划分 的 子 区域 太 多 , 整个 区域 收敛 速度 减慢 . 这里 划分 的 子 区域 数目 等于 处理机 的 个数 , 并 在 区域 迭代 求解 过程 中 , 根据 本 处理机 上 的 局部 状态 信息 和 整个 区域 的 全局 状态 来 动态 地 改变 区域 的 划分 , 从而 达到 任务 最终 能 均衡 地 运行 的 目的 . 
 　 　 设 处理机 集 为 : P = { P1 , P2 , P3 , ... , Pm } , Pi 为 处理机 i , 处理机 数为 m . Ω 为 一 油藏 模拟 区域 , 分解 为 m 个子 区域 , 令 Ω 有 分解 Ω = Ω i , 即子 区域 集 Ω = { Ω 1 , Ω 2 , ... , Ω m } , Ω i 为 第 i 个子 域 . 
 　 　 并行 求解 的 每 一 迭代 涉及 到 区域 的 并行 迭代 和 负载平衡 算法 , 在 P 个 处理机 上 完成 max - iter 次 迭代 的 总 的 执行 时间 ［ 4 ］ 为 
 　 　 　 　 　 　 　 　 　 　 （ 5 ） 
 其中 k 为 迭代 步 , i 为 处理机 Pi （ i = 1 , 2 , ... , P ） , , i 表示 处理机 Pi 在 第 k 次 迭代 步 的 执行 时间 , , i 表示 处理机 Pi 在 第 k 次 迭代 后 负载平衡 算法 的 时间 . 并行 迭代 过程 中 , 计算 和 同步 通信 是 交替 进行 的 , 而 处理机 Pi 一次 迭代 的 时间 受 3 个 因素 的 影响 . 
 Tapp , i ( k ) = f ( tcomp , tcomm , tid ) , 　 　 　 　 　 　 　 　 　 　 　 （ 6 ） 
 其中 tcomp 是 一次 迭代 的 计算 时间 , tcomm 是 迭代 通信 时间 , tid 是 同步 等待时间 . 在 迭代 收敛 的 情况 下 , 区域 的 划分 应以 总 的 执行 时间 尽量 短为 目标 . 
 2.2 并行计算 的 几点 说明 
 　 　 根据上述 分析 , 对 油藏 数值 模拟 中 区域 分解 并行计算 作 如下 几点 说明 : 
 　 　 （ 1 ） 油区 是 不 均匀 的 , 而 选定 的 计算 域 是 一 规则 的 区域 , 如 长方形 区域 . 子 区域 网格 离散 化 相同 , 各 子域 的 求解 方法 可以 不同 , 各子 区域 的 收敛 条件 也 可以 不同 . 
 　 　 （ 2 ） 在 并行计算 环境 中 , 网络 的 带宽 会 由于 环境 中 其他 用户 的 介入 或 因 本身 任务 而 发生 动态 的 变化 , 结果 是 消息 通过 网络 延迟 发生变化 , 这里 不 考虑 网络 传输 性能 及 结点 性能 的 变化 . 同一 处理机 上 的 子 区域 之间 的 通信 代价 为 0 , 不 在 同一 处理机 上 的 子 区域 之间 的 通信 代价 只 与其 相邻 区域 的 边界 大小 或 公共 区域 大小 有关 . 
 　 　 （ 3 ） 处理机 上 计算 和 通信 不 重叠 . 
 　 　 （ 4 ） 区域 分解 并行 迭代 时 , 整个 区域 的 每 一 迭代 步 包括 所有 子 区域 的 多次 迭代 , 直至 分别 达到 各子 区域 的 收敛 条件 . 整个 区域 的 迭代 步 相对 于 各子 区域 的 迭代 步少 得 多 . 这里 将 每 一个 子 区域 的 每 一次 收敛 到 该子 区域 的 收敛 条件 的 迭代 过程 视为 一个 任务 , 任务 迁移 使得 相邻 子 区域间 的 边界 移动 , 引起 子 区域 大小 的 变化 , 从而 将 一部分 迭代 过程 迁移 到 其他 处理机 上 . 本文 将 不加区分 地 使用 子 区域 的 每 一次 迭代 收敛 过程 和 任务 . 
 　 　 （ 5 ） 在 实际 应用 中 , 处理机 的 数目 一般 较 少 , 而 油藏 模拟 的 区域 一般 很大 , 划分 后 的 子 区域 的 计算 量 和 收敛 速度 与 该子 区域 需 计算 的 节点 数 、 每次 的 迭代 初值 、 所用 算法 等 有关 . 
 　 　 （ 6 ） 处理机 间 的 连接 是 线性 连接 , 计算 区域 是 长方形 （ 体 ） 区域 , 区域 的 划分 与 处理机 连接 一一对应 , 子 区域 的 数目 与 处理机 的 数目 相等 . 每个 处理机 只 与 相邻 的 处理机 交换 数据 . 
 2.3 负载平衡 模型 及 分区 算法 
 　 　 设 整个 区域 的 迭代 步为 k = 1 , 2 , ... , 在 每 一 迭代 步后 , 可 根据 处理机 的 信息 来 启动 负载平衡 算法 , 负载平衡 算法 涉及 的 时刻 可以 用 k 表示 . 
 　 　 定义 1 . w （ k ） : 并行 系统 在 k 时刻 的 状态 - 任务 的 分布 向量 . wi （ k ） : 处理机 Pi 在 区域 第 k 步 迭代 后 的 任务量 , 则 时刻 k + 1 的 任务 分布 包括 : k 时刻 的 任务 分布 、 负载平衡 引起 的 任务 传递 . 处理机 Pi 的 负载平衡 模型 可 表述 为 
 wi ( k + 1 ) = wi ( k ) - wi , l . d , s ( k ) + wi , l . d , r ( k ) , 　 　 　 　 　 　 　 　 　 （ 7 ） 
 其中 wi , l . d , s （ k ） , wi , l . d , r ( k ) 分别 表示 负载平衡 引起 的 发送 和 接收 的 任务 . 
 　 　 定义 2 . A （ k ） : 处理机 参与 矩阵 , 对于 P 个 处理机 的 并行 系统 , 它 是 一个 p × p 的 矩阵 , 每个 处理机 只能 与其 相邻 的 处理机 有 任务 的 重新分配 . 如果 处理机 Pi 和 Pj 参与 任务 迁移 , 则 对应 元素 置 为 “ 1 ” , 否则 , 对应 元素 置 为 “ 0 ” . 
 　 　 定义 3 . M （ k ） : 描述 任务 的 迁移 , 它 是 一个 p × p 的 矩阵 . 每个 处理机 只能 与其 相邻 的 处理机 有 任务 的 迁移 . Mij : 处理机 Pi 向 Pj 迁移 任务 的 因子 , 如 Pi 送给 Pj 的 任务 可 表示 为 : Mij （ k ） . wi （ k ） . 
 　 　 定义 4 . H : 允许 任务 迁移 的 路径 矩阵 . Hij : 如果 处理机 Pi 允许 向 Pj 迁移 任务 , 则 对应 元素 置 为 “ 1 ” , 否则 , 对应 元素 置 为 “ 0 ” . 因此 , Mij ≠ 0 仅当 Hij = 1 . 
 　 　 根据上述 的 定义 , 式 （ 7 ） 表述 为 
 wi ( k + 1 ) = wi ( k ) - Mij ( k ) Aii ( k ) wi ( k ) + Mji ( k ) Ajj ( k ) wj ( k ) . 　 　 　 　 （ 8 ） 
 上式 中 , 第 1 个 和 项 表示 从 处理机 Pi 到 其 相邻 处理机 的 任务 迁移 ; 第 2 个 和 项 表示 从 Pi 的 相邻 处理机 到 Pi 的 任务 迁移 . 定义 : Mii ( k ) = - Mij ( k ) , 则 负载平衡 模型 可以 表述 为 
 w ( k + 1 ) = w ( k ) + ［ M ( k ) ］ TA ( k ) w ( k ) . 　 　 　 　 　 　 　 　 　 　 （ 9 ） 
 　 　 定义 5 . : 处理机 的 理想 任务 分布 . 
 = 
 　 　 定义 6 . : 处理机 Pi 的 相邻 处理机 任务 分布 的 平均 信息 . 
 = 
 其中 d 为 Pi 的 相邻 处理机 数 , Ri 为 Pi 的 相邻 处理机 集 . 
 　 　 和 可 分别 作为 处理机 任务 分布 的 全局 信息 和 局部 信息 . 
 　 　 根据上述 定义 , 将 处理机 Pi 第 k 次 迭代 完成 的 时间 , i 记为 其 在 k 时刻 的 任务量 wi ( k ) , 采用 负载平衡 的 分区 并行算法 可 表述 为 : 
 　 　 （ 1 ） 将 区域 均 分为 子 区域 Ω 1 , ... , Ω m , 并 对应 地 分配 到 处理机 P1 , ... , Pm 上 . 令 初始 集为 S = { 1 , 2 , ... , m } . 
 　 　 （ 2 ） 应用 区域 分解 并行算法 , 各子 区域 在 处理机 上 并行执行 , 直至 达到 各子 区域 的 收敛 条件 ; 分别 统计 其 迭代 完成 时间 , i , 记为 wi ( k ) . 
 　 　 （ 3 ） 求解 子 区域间 的 边界 节点 或 公共 子 区域 . 
 　 　 （ 4 ） 如果 整个 区域 达到 其 收敛 条件 , 则 终止 ; 否则 , 转 （ 5 ） . 
 　 　 （ 5 ） 从 S 中 选择 满足 i ( k ) = max ｛ p ( k ) , p ∈ S ｝ 的 处理机 Pi 及 处理机 Pl , Pl 满足 l ( k ) = min 
 ｛ p ( k ) , p ∈ S ｝ . 如果 i - l ≤ α ( σ 为 处理机 间 容许 的 负载 差 ） , 转 （ 2 ） ; 否则 , 转 （ 6 ） . 
 　 　 （ 6 ） 在 Pi 的 相邻 处理机 集中 选择 Pj , 满足 j ( k ) = min ｛ wp ( k ) , p ∈ Ri ｝ （ Ω i 的 相邻 区域 集记 为 Ω Ri ） , 如果 i - j ＞ α , 处理机 Pi 的 部分 任务 需 迁移 到 Pj 上 , 即 需在域 Ω i 与其 邻域 Ω j 之间 重新 划分 区域 . Pi 迁移 到 Pj 的 任务量 约 为 : wi ( k ) - k ( k ) ; 否则 , 转 （ 7 ） . 
 　 　 （ 7 ） S = S - { i } , 如果 S ≠ , 转 （ 5 ） ; 否则 , 重置 S = { 1 , 2 , ... , m } , 转 （ 2 ） . 
 3 计算 实例 
 　 　 在 黑油 数值 模拟 并行 化 软件开发 的 研究 中 , 使用 了 区域 分解 并行计算 , 获得 了 较 好 的 效果 . 下面 是 一 油藏 模拟 中 黑油 压力 问题 模型 , 
 ( 10 ) 
 其中 
 Ct = Cr + CoSo + CwSw + CgSg , Pcow = Po - Pw , Pcgo = Pg - Po , So + Sw + Sg = 1 
 这里 , 下标 o , w , g 分别 为油 、 水 、 气相 , 下标 sc 为 地面 标准 条件 , B 为 体积 系数 , Rso 为 溶解 气油 比 , q 为 注入 或 采出 的 体积 流量 , S 为 饱和度 , P 为 压力 , Pc 为 毛管 压力 , Φ 为 孔隙 度 , ρ 为 密度 , L1 为 边界条件 算子 , t 为 时间 , f 是 关于 时间 的 压力 函数 . 
 　 　 对于 上述 模型 的 这种 大型 边值问题 , 如 应用 迭代 子结构 类型 的 区域 分解 方法 , 其 离散 模型 从总体上 说 都 可 化为 一个 系数 矩阵 加边 对角 块 的 线性方程组 . 将 区域 Ω 分成 互不 相交 的 m 个子 区域 Ω i , i ＝ 1 , 2 , ... , m , 若用 步长 为 h 的 正方形 网格 , 用 7 点 差分 格式 离散 方程 , 可 得到 如下 线性方程组 ［ 5 ］ . 
 　 　 　 　 　 　 （ 11 ） 
 式 中 A1 , 1 , A2 , 2 , ... , Am , m 分别 对应 于子 区域 Ω 1 , Ω 2 , ... , Ω m 上 的 矩阵 . 式 （ 10 ） 的 求解 可 运用 迭代法 , 以前 一 阶段 的 近似 解 作为 下一阶段 的 初始 量 , 使 整个 问题 收敛 . 对 每 一 迭代 步中 的 每个 子 区域 问题 Aj , jpj = fj - Ａ j , m + 1pm + 1 （ j = 1 , 2 , ... , m ） 的 求解 , 可以 对应 地 分配 到 m 个 处理机 上 并行 求解 , 在 每 一 迭代 步后 , 可以 根据 负载平衡 算法 , 重新 划分 区域 , 形成 新 的 方程组 
 　 　 　 　 　 　 （ 12 ） 
 　 　 对 新 形成 的 子 区域 问题 : A ′ j , jp ′ j = f ′ j - A ′ j , m + 1p ′ m + 1 （ j = 1 , 2 , ... , m ） , 仍 对应 在 m 个 处理机 上 并行 求解 . 这样 , 经过 负载平衡 算法 , 各 处理机 的 任务 较 先前 的 均衡 . 计算 实例 为 : 区域 x , y , z 方向 网格 数 分别 为 170 、 50 、 5 , 节点 规模 为 42500 的 上述 黑油 模型 , 沿 平行 于 z 方向 剖分 区域 , 该 区域 中非 均匀 地 分布 着 许多 “ 死 节点 ” . 运用 区域 分解 法 并行计算 30 个 阶段 （ 时间段 ） . 区域 收敛 判别 为 : ‖ Pi + 1 - Pi ‖ ∞ ≤ 10 - 4 , Pi + 1 , Pi 分别 为 整个 区域 的 第 i ＋ 1 迭代 步 和 第 i 迭代 步 的 压力 . 各子 区域 采用 LU 预处理 广义 极小 剩余 法 （ GMRES （ m ） ） 求解 , 取 GMRES （ m ） 算法 中 的 截断 参数 m 为 10 , 各子 区域 收敛 判别 为 ‖ pm - p1 ‖ ∞ ≤ m * 10 - 4 , pm , p1 分别 为 解子 区域 的 GMRES （ m ） 算法 的 第 m 迭代 步 和 第 1 迭代 步 压力 . 计算环境 是 用 PVM 通过 以太网 分别 连接 2 个 、 3 个 、 4 个 、 5 个 SGIindy 构成 几种 分布式 并行计算 系统 . 图 1 给出 了 该 黑油 数值 模型 采用 负载平衡 方法 和 无 负载平衡 时 的 加速 比 的 比较 . 实验 结果表明 , 采用 负载平衡 方法 能 使 系统 并行 加速 比 提高 10 ％ ～ 40 ％ . 如对 4 个 处理机 的 并行 系统 在 无 负载平衡 时 , 上述 模型 计算 30 个 阶段 的 加速 比为 2.51 , 采用 本文 的 负载平衡 分区 算法 后 其 加速 比为 3.25 , 加速 比 提高 29.5% . 
 
 图 1 　 加速 比 比较 
 本文 研究 得到 国家 863 高科技 项目 基金 资助 . 
 作者 介绍 ： 舒 继武 , 1969 年生 , 博士生 , 主要 研究 领域 为 并行处理 和 分布式计算 . 
 　 　 　 　 　 赵 金熙 , 1950 年生 , 博士 , 副教授 ， 主要 研究 领域 为 计算 数学 , 数值 计算 . 
 　 　 　 　 　 周维四 , 1942 年生 , 教授级 高工 , 主要 研究 领域 为 计算技术 和 油藏 模拟 . 
 　 　 　 　 　 张德富 , 1937 年生 , 教授 , 博士生 导师 , 主要 研究 领域 为 计算机软件 , 并行处理 , 分布式计算 . 
 本文 通讯联系 人 : 舒 继武 ， 北京 100084 , 清华大学 计算机科学 与 技术 系 
 作者 单位 ： 舒 继武 　 赵 金熙 　 张德富 　 南京大学 计算机软件 新 技术 国家 重点 实验室 　 南京 210093 　 南京大学 计算机科学 与 技术 系 　 南京 　 210093 
 　 　 　 　 　 周维四 　 胜利油田 地质 科学 研究院 东营 257000 
 参考文献 
 　 ［ 1 ］ HoffmannKH , ZouJun . Parallelefficiencyofdomaindecompositionmethods . ParallelComputing , 1993 , 19 （ 12 ） : 1375 ～ 1391 
 　 ［ 2 ］ ChanTF , ShaoJP . Parallelcomplexityofdomaindecompositionmethodsandoptimalcoarsegridsize . ParallelComputing , 1995 , 21 （ 7 ） : 1033 ～ 1049 
 　 ［ 3 ］ 吕涛 , 石济民 , 林振宝 等 . 区域 分解 法 — — 偏 微分方程 数值 解新 技术 . 北京 : 北京 科学技术 出版社 , 1992 ( L ? Tao , ShiJi - min , LinZhen - baoetal . DomainDecompositionMethods — — NewTechnologyforNumericalSolverofPartialDifferentialEquations . Beijing : BeijingScienceandTechnologyPress , 1992 ) 
 　 ［ 4 ］ FranklinMA , GovindanV . Ageneralmatrixiterativemodelfordynamicloadbalancing . ParallelComputing , 1996 , 22 （ 7 ） : 969 ～ 989 
 　 ［ 5 ］ 赵 金熙 , 舒 继武 , 张德富 等 . 大型 对称 不定 箭形 线性方程组 的 分解 方法 . 高等学校 计算 数学 学报 , 1997 , 19 （ 1 ） : 83 ～ 92 ( ZhaoJin - xi , ShuJi - wu , ZhangDe - fuetal . Adirectmethodforsolvingsymmetricindefinitearrowlinearsystem . NumericalMathematics , AJournalofChineseUniversities , 1997 , 19 （ 1 ） : 83 ～ 92 ) 
 本文 1997 - 11 - 13 收到 原稿 , 1998 - 03 - 03 收到 修改稿 
