微型机 与 应用 
 MICROCOMPUTER & ITSAPPLICATIONS 
 1999 年 第 18 卷 第 2 期 Vol.18 No.21999 
 
 
 
 Unix 系统 中 两个 与 2000 年 问题 
 相关 的 命令 及 解决 方法 
 李 爱国 　 叶臻杰 
 　 　 摘 　 要 ： 介绍 了 Unix 系统 中 2 个 与 2000 年 问题 相关 的 命令 ， 提出 了 解决 的 方法 ， 并用 C语言 对 关键 模块 进行 了 实现 。 
 　 　 关键词 ： Unix 系统 　 2000 年 问题 　 GMT 时间 
 1 　 问题 提出 
 　 　 Unix 系统 是 一种 分 时 、 多任务 、 多用户 的 操作系统 ， 目前 在 许多 大型 应用领域 广为 流行 ， 如 邮电 、 金融 、 税务 等 。 但 随着 2000 年 的 临近 ， 该 系统 也 存在 着 一些 与 2000 年 相关 的 “ 世纪 问题 ” ( 以下 简称 Y2K 问题 ) ， 如常 被 用来 显示 或 修改 系统 日期 和 时间 的 2 个 命令 asktime 和 date ， 2000 年 后 均 不能 正确 地 设置 系统 日期 和 时间 。 命令 asktime 设置 系统 日期 和 时间 的 格式 为 ( ［ yymmdd ］ hhmm ) ， 这里 yy 只 接收 年份 的 后 2 位 数字 ， 如 输入 98 时则 代表 1998 年 。 因 Unix 系统 是 以 GMT ( 格林威治 时间 ) 1970 年 1 月 1 日 的 00 ： 00 ： 00 至今 所 经过 的 秒数 来计 时间 ， 所以 当 yy ≤ 70 时 ， 该 命令 设置 的 系统 时间 均 为 1970 年 ； 当 70 ≤ yy ≤ 99 时 ， 系统 对应 的 时间 为 1970 ～ 1999 年 ， 通过 上述 分析 ， 命令 asktime 根本 不能 正确 地 设置 1999 年 后 的 日期 。 虽然 命令 date 能 将 日期 设置 成 2000 年 后 ， 但 存在 误差 ， 因为 date 命令 无法 正确 判断 2000 年 是否 为润 年 ， 如想 把 系统 时间 设置 成 2000 年 7 月 27 日 11 时 25 分 ， 用 命令 “ date0727112500 ” ， 系统 日期 却 为 2000 年 7 月 28 日 11 时 25 分 。 由此可见 ， Unix 系统 中 的 某些 命令 也 存在 着 “ Y2K 问题 ” 。 
 2 　 解决 方法 
 　 　 为了 解决 Unix 系统 中 某些 命令 的 “ Y2K 问题 ” ， 方法 有 2 种 ： 其 一对 相关 的 命令 进行 修改 ； 其二 重写 相关 命令 。 由于 一般 人 手头 无 相关 命令 的 源码 ， 所以 重写 相关 命令 更 容易 。 笔者 对 asktime 命令 进行 了 重写 ， 较 好地解决 了 该 命令 的 “ Y2K 问题 ” 。 
 　 　 1 . 程序设计 思想 
 　 　 Unix 系统 提供 了 几个 设置 系统 时间 的 库 例行程序 ， 如 settime ( & newtime ) ， 其中 newtime 定义 成长 整形 ， 我们 只要 把 1970 年 1 月 1 日 00 ： 00 ： 00 至今 所 经过 的 秒数 计算出来 赋给 newtime ， 再 调用 该 函数 ， 系统 将会 把 日期 和 时间 设置 成 现在 的 日期 和 时间 。 所以 程序设计 的 关键 是 计算 newtime 的 值 ， 它 涉及 润年润 月 的 判断 问题 。 
 　 　 2 . 程序实现 
 　 　 程序实现 的 关键 是 计算 newtime 的 值 ， 而求 newtime 值 的 关键 又 是 计算 待 设置 日期 与 1970 年 1 月 1 日 相减 所得 的 实际 天数 ， 下面 就 以求 实际 天数 为例 简要 介绍 程序 的 实现 方法 。 首先 将 参数 说明 如下 ： 
 　 　 ( 1 ) 入口 参数 ： qrq - yy 、 qrq - mm 、 qrq - dd 分别 为 起始 日期 的 年 、 月 、 日 ； zrq - yy 、 zrq - mm 、 zrq - dd 分别 为 终止 日期 的 年 、 月 、 日 。 
 　 　 ( 2 ) 出口 参数 ： compute - ts 为 起始 日期 与 终止 日期 之间 的 天数 。 
 intcomputets ( intqrqyy , intqrqmm , intqrqdd , intzrqyy , intzrqmm , intzrqdd ) 
 { 
 　 charyn ［ 1 ］ , bz ［ 1 ］ ; 
 　 intys , rq1 , sjts ; 
 　 if ( ( qrqyy < zrqyy ) ‖ ( ( qrqyy = = zrqyy ) && ( qrqmm < zrqmm ) ) ‖ ( ( qrqyy = = zrqyy ) && ( qrqmm = = zrqmm ) 
 　 　 　 && ( qrqdd < zrqdd ) ) ‖ ( ( qrqyy = = zrqyy ) && ( qrqmm = = zrqmm ) && ( qrqdd = = zrqdd ) ) ) 
 　 　 sjts = 1 ; 　 / * 若 终止 日期 大于 起始 日期 则 sjts = 1 , 否则 sjts = 0 * / 
 　 else 
 　 　 sjts = 0 ; 
 　 strcpy ( yn , “ ” ) ； 
 　 do { 
 　 　 ++ qrqdd ; 
 　 　 if ( qrqdd > 28 ) 
 　 　 　 { 
 　 　 　 　 switch ( qrqmm ) { 
 　 　 　 　 　 case1 : 　 / * 月份 为 1 、 3 、 5 、 7 、 8 、 10 、 12 且 当 起始 日期 的 天 > 31 时 * / 
 　 　 　 　 　 case3 : 　 / * 把 起始 日期 的 天 减去 31 ， 月份 加 1 ， 并 判断 月份 是否 大于 12 * / 
 　 　 　 　 　 case5 : 　 / * 若 大于 12 ， 则 月份 减去 12 ， 年份 加 1 * / 
 　 　 　 　 　 case7 : 
 　 　 　 　 　 case8 : 
 　 　 　 　 　 case10 : 
 　 　 　 　 　 case12 : 
 　 　 　 　 　 　 if ( qrqdd > 31 ) 
 { 
 　 　 　 　 　 　 　 qrqdd - = 31 ; 
 　 　 　 　 　 　 　 qrqmm + = 1 ; 
 　 　 　 　 　 　 　 if ( qrqmm > 12 ) 
 { 
 　 　 　 　 　 　 　 　 qrqmm - = 12 ; 
 　 　 　 　 　 　 　 　 qrqyy + = 1 ; 
 　 　 　 　 　 　 　 　 } 
 　 　 　 　 　 　 } 
 　 　 　 　 　 　 break ; 
 　 　 　 　 　 case4 : 　 / * 月份 为 4 、 5 、 6 则 判断 起始 日期 的 天数 是否 大于 30 * / 
 　 　 　 　 　 case6 : 
 　 　 　 　 　 case9 : 
 　 　 　 　 　 case11 : 
 　 　 　 　 　 　 if ( qrqdd > 30 ) 
 { 
 　 　 　 　 　 　 　 qrqdd - = 30 ; 
 　 　 　 　 　 　 　 qrqmm + = 1 ; 
 　 　 　 　 　 　 　 if ( qrqmm > 12 ) 
 { 
 　 　 　 　 　 　 　 　 qrqmm - = 12 ; 
 　 　 　 　 　 　 　 　 qrqyy + = 1 ; 
 　 　 　 　 　 　 　 　 } 
 　 　 　 　 　 　 } 
 　 　 　 　 　 　 break ; 
 　 　 　 　 　 case2 : 　 / * 月份 为 2 ， 且 为 润 年 则 判断 起始 日期 的 天数 是否 大于 29 ， 否则 看 是否 大于 28 * / 
 　 　 　 　 　 　 if ( ( ( ( qrqyy% 4 ) = = 0 ) && ( ( qrqyy% 100 ) = = 0 ) && ( ( qrqyy% 400 ) = = 0 ) ) ‖ ( ( ( qrqyy% 4 ) = = 0 ) && ( ( qrqyy% 100 ) ! = 0 ) ) ) 
 　 　 　 　 　 　 　 strcpy ( bz , “ 1 ” ) ； 
 　 　 　 　 　 　 else 
 　 　 　 　 　 　 　 strcpy ( bz , “ 0 ” ) ； 
 　 　 　 　 　 　 if ( ( strcmp ( bz , “ 1 ” ) = = && ( qrqdd > 29 ) ) 
 　 　 　 　 　 　 { qrqdd - = 29 ; 
 qrqmm + = 1 ; 
 　 　 　 　 　 　 　 if ( qrqmm > 12 ) 
 　 　 　 　 　 　 　 { qrqmm - = 12 ; 
 qrqyy + = 1 ; 
 　 　 　 　 　 　 　 } 
 　 　 　 　 　 　 } 
 　 　 　 　 　 　 if ( ( strcmp ( bz , “ 0 ” ) = = && ( qrqdd > 28 ) ) 
 　 　 　 　 　 　 { qrqdd - = 28 ; 
 qrqmm + = 1 ; 
 　 　 　 　 　 　 　 if ( qrqmm > 12 ) 
 　 　 　 　 　 　 　 { qrqmm - = 12 ; 
 qrqyy + = 1 ; 
 　 　 　 　 　 　 　 } 
 　 　 　 　 　 　 } 
 　 　 　 　 　 break ; 
 　 　 } 
 } 
 　 　 　 　 if ( ( qrqyy < zrqyy ) ‖ ( ( qrqyy = = zrqyy ) && ( qrqmm < zrqmm ) ) ‖ ( ( qrqyy = = zrqyy ) && ( qrqmm = = zrqmm ) && ( qrqdd < = zrqdd ) ) ) 
 　 　 　 　 　 sjts + = 1 ; 　 / * 若 起始 日期 不 大于 终止 日期 则 变量 sjts 加 1 * / 
 　 　 　 　 else 
 　 　 　 　 　 strcpy ( yn , “ - ” ) ； 　 / * 若 起始 日期 大于 终止 日期 则 将 “ - ” 赋给 变量 yn * / 
 　 　 } while ( strcmp ( yn , “ ” ) = = 0 ) ; 　 / * 若 变量 yn 的 值 为 “ - ” 则 结束 循环 * / 
 　 　 retrun ( sjts - 1 ) 　 / * 返回 实际 天数 ( sjts - 1 ) * / 
 } 
 3 　 几点 说明 
 　 　 1 . 可以 采用 相同 的 方法 对 命令 date 进行 重写 。 
 　 　 2 . 因 存储 日历 时间 的 计数器 为 31 位 ， 在 2038 年 1 月 19 日 3 时 14 分 以前 有 足够 的 空间 存储 日历 时间 ， 但 该 时间 以后 ， 计数器 溢出 ， 不能 用 上述 方法 正确 设置 系统 时间 。 
 　 　 3 . newtime 的 值 是 GMT1970 年 1 月 1 日 0 时 0 分 0 秒 以来 的 秒数 ， 注意 北京 时间 与 GMT 时间 相差 8 个 时区 。 
 　 　 4 . 对于 “ Y2K 问题 ” ， SCO 公司 推出 了 2 张 补丁 盘 UOD426B / XNX427E ， 分别 用于 解决 Unix / Xenix 操作系统 的 “ Y2K 问题 ” 。 对于 这 2 张 补丁 盘 ， 我们 既 可以 向 软件 提供商 索取 ， 也 可以 通过 internet 下载 ( 网址 为 ： WWW . SCO . COM ) 。 
 作者 单位 ： 农业银行 常德市 分行 科技 电脑部 ( 415000 ) 
 参考文献 
 1 　 钱培德 . Unix 系统 程序设计 技术 . 北京 ： 北京 科海 高技术 公司 培训中心 
 2 　 杨 华中 . Unix 应用 教程 . 北京 ： 人民邮电出版社 
 ( 收稿 日期 ： 1998 - 08 - 24 ) 
