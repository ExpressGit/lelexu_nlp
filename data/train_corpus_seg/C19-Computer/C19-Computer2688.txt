软件 学报 
 JOURNALOFSOFTWARE 
 1999 年 　 第 10 卷 　 第 11 期 　 Vol.10 　 No.11 　 1999 
 
 
 
 多 物化 视图 并行 增量 保持 三 阶段 模式 
 王腾 蛟 王 海洋 洪晓光 　 董继润 
 　 　 摘要 　 文章 提出 了 一种 基于 并行 流水线 处理 方式 的 多 物化 视图 ( materializedviews ) 增量 保持 方法 , 即 在 先 进行 筛选 的 条件 下 , 利用 归类 拓扑 排序 , 将 所有 物化 视图 进行 分类 , 使 每 一类 中 的 视图 之间 没有 嵌套 定义 关系 . 最后 对 每 一类 中 的 所有 视图 利用 基于 信号量 控制 机制 的 流水线 模式 并行处理 , 以 达到 对 多 物化 视图 实现 增量 保持 的 目的 . 
 　 　 关键词 　 物化 视图 , 拓扑 排序 , 流水线 , 数据仓库 , 分布式 数据库 . 
 　 　 中图法 分类号 　 TP311 
 AThree - stageModelofIncrementalMaintenanceofMulti - materializedViews 
 WANGTeng - jiao1WANGHai - yang2HONGXiao - guang2DONGJi - run2 
 1 ( DepartmentofComputerScienceandTechnologyBeijingUniversityBeijing100871 ) 
 2 ( DepartmentofComputerScienceShandongUniversityJi ' nan250100 ) 
 　 　 Abstract 　 Anewmethodispresentedinthispaper , whichisaboutincrementalmaintenanceofmulti - materializedviewsbasedonparallelpipelineprocess . Inthisprocess , theauthorsclassifyallthematerializedviewsfirstbyusingchoosingmethods , thenbyclassifiedtopologicalsorting , sothatnonesteddefinitionsofrelationsexistamongtheseviews . Finally , inordertomaintaintheincrementalmulti - materializedviews , theyprocessinparallelalltheviewsbyutilizingpipelinemodelofsemaphoreprocessmechanism . 
 　 　 Keywords 　 Materializedviews , topologicalsorting , pipeline , datawarehouse , distributeddatabase . 
 　 　 分布式 数据库 和 数据仓库 中 的 物化 视图 是 将 对 基本 数据库 的 某次 查询 结果 或 基本 视图 物理 地 存储 在 本地 工作站 上 , 因而 当 以后 再 做 有关 的 查询 时 , 可以 不必 访问 基本 数据库 而 在 物化 视图 中 直接 得到 结果 . 目前 , 这方面 的 研究 ［ 1 , 2 ］ 主要 集中 在 单 物化 视图 的 增量 保持 讨论 上 , 而 应用 中 大量 多 物化 视图 的 增量 保持 问题 需要 我们 加以 处理 , 尤其 是 当 多个 物化 视图 之间 存在 联系 时 , 这 类 问题 显得 更为重要 . 故此 , 本文 提出 了 一种 新 的 多 物化 视图 增量 保持 三 阶段 模式 . 
 1 物化 视图 的 增量 保持 
 　 　 首先 , 我们 利用 文献 ［ 2 ］ 中 的 概念 和 术语 来 描述 单 物化 视图 的 增量 保持 方法 . R1 , R2 , ... , Rn 代表 基本 数据库 中 的 关系 ; C 是 物化 视图 的 选择 - 投影 - 连接 ( SPJ ) 定义 ; INS ( Ru , T ) 表示 将 元组 集合 T 插入 到 关系 Ru 中 ; DEL ( Ru , Cd ) 表示 将 关系 Ru 中 满足条件 Cd 的 元组 删除 ; A 代表 出现 在 视图 V 中 的 属性 集 ; A + 表示 由 A 唯一 确定 的 属性 集 ; α ( Cd ) 代表 Cd 中 使用 的 变量 集合 ; α ( C ) 代表 C 中 使用 的 变量 集合 . 
 　 　 定义 1 ( Z - 延伸 视图 : Vz ) . Vz 是 由 视图 V 经过 如下 变换 得到 的 V 的 延伸 : 将 视图 V 追加 属性 集 Z = ( α ( Cd ) ∪ α ( C ) ) - A + , 相应 地 , 每个 元组 t ∈ V 追加 ｜ Z ｜ 个 不同 的 变量 zk , 1 ≤ k ≤ ｜ Z ｜ × ｜ V ｜ . zk 称做 Z - 变量 . 
 　 　 定义 2 ( 关系 Ri 的 Z - 投影 : ) . 给定 由 C 定义 的 视图 V , 关系 Ri 的 Z - 投影 : Rzi = П Gi ( Vz ) , 其中 Gi = Z = ( α ( Cd ) ∪ α ( C ) ∪ A + ) ∩ α ( Ri ) , 1 ≤ i ≤ n . 
 　 　 定义 3 ( 投影 - 连接 映射 ( PJM ) ) . Z - 延伸 视图 Vz 的 投影 - 连接 映射 定义 为 PJM （ Vz ） = Rz1 × Rz2 × ... × Rzm . 每 一个 元组 μ ∈ PJM （ Vz ） , 一定 属于 下面 中 的 一类 , C （ μ ） 是 使用 μ 计算 的 视图 定义 . 
 　 　 对 μ 中 Z - 变量 进行 某种 实例 化后 , C （ μ ） 是 可 满足 的 , 而且 
 　 　 （ 1 ） 将 μ 投影 到 不同 属性 上 得到 的 元组 在 物化 视图 V 中 ; 或者 , 
 　 　 （ 2 ） 将 μ 投影 到 不同 属性 上 得到 的 元组 不 在 物化 视图 V 中 . 
 　 　 对 μ 中 Z - 变量 无论 进行 何种 实例 化后 , C （ μ ） 都 不会 满足 . 这样 的 μ 可 在 PJM 中 删除 . 
 　 　 属于 上述 ( 1 ) 类型 的 所有 元组 称做 pos ( V ) , 即 正确 信息 ; 属于 上述 ( 2 ) 类型 的 所有 元组 称做 neg ( V ) , 即 否定 信息 , 且 用 ni 来 编号 . 
 　 　 定义 4 （ 结合 信息 : L ( V ) ) . L ( V ) 是 由 Z - 延伸 视图 Vz 的 元组 得到 的 正确 信息 与 由 neg ( V ) 中 的 元组 得到 的 否定 信息 的 结合 . 即 由 定义 C 和 视图 V 得到 的 信息 的 汇总 . 
 　 　 引理 1 . 给定 非空 视图 V , 它 的 Z - 延伸 Vz 和 PJM ( Vz ) , 对 R1 应用 删除 条件 CD 后 , 元组 tz ∈ Vz 仍 留在 视图 中当且 仅 当 L ( V ) H : ［ R1 ( П R1 ( tz ) ∧ ... ∧ Rn ( П Rn ( tz ) ) ∧ C ( tz ) ∧ CD ( П R1 ( tz ) ) ］ , 其中 H 为 元组 tz 中 出现 的 Z - 变量 集合 , R1 是 指 结果 出现 在 视图 中 的 某个 基本 关系 . 
 　 　 引理 2 . 给定 非空 视图 V , 它 的 Z - 延伸 Vz 和 PJM ( Vz ) , 对 R1 应用 删除 条件 CD 后 , 元组 tz ∈ Vz 应 在 视图 中 删去 当且 仅 当 L ( V ) H : ［ R1 ( П R1 ( tz ) ∧ ... ∧ Rn ( П Rn ( tz ) ) ∧ C ( tz ) ∧ CD ( П R1 ( tz ) ) ］ , 其中 H 为 元组 tz 中 出现 的 Z - 变量 集合 , R1 是 指 结果 出现 在 视图 中 的 某个 基本 关系 . 
 　 　 定理 1 . 有 条件 自治 可 计算 的 必要条件 是 , 如果 一个 删除 操作 是 有 条件 自治 可 计算 的 ［ 2 ］ , 则 每 一个 元组 t ∈ V 一定 满足 引理 1 或 引理 2 中 的 条件 . 
 插入 与 删除 基本思路 相同 , 还要 考虑 基本 数据库 中 没有 表现 在 物化 视图 中 的 元组 . 
 2 多 物化 视图 环境 中 的 增量 保持 三 阶段 模式 
 　 　 三 阶段 模式 包括 筛选 、 分类管理 和 并行 流水线 处理 . 其中 保持 单个 视图 时 利用 了 第 1 节中 提到 的 处理 方法 , 并 在 流水线 模式 中 利用 L ( V ) 优化 管理机制 进行 优化 处理 . 假设 本地 工作站 上 有 物化 视图 M 个 , 记做 V1 , V2 , ... , VM . 对 数据库 的 修改 U 包含 δ 1 , δ 2 , ... , δ n . 
 2.1 筛选 最小 子集 
 　 　 筛选 最小 子集 , 即 在 V1 , V2 , ... , VM 中 删除 本次 修改 U 明显 不会 影响 到 的 视图 . 
 　 　 min - subset = { V1 , V2 , ... , VM } 
 　 　 unchange = 
 　 　 updated = λ ( δ 1 ) ∪ λ ( δ 2 ) ∪ ... ∪ λ ( δ n ) 　 　 　 　 / * λ ( δ i ) 表示 被 δ n 修改 的 关系 * / 
 　 　 fori = 1toMloop 
 　 　 　 if λ ( C ( Vi ) ) updatedthen / * λ ( C ( Vi ) ) 表示 视图 Vi 定义 中 使用 的 关系 * / 
 　 　 　 　 unchange = unchange ∪ { Vi } 
 　 　 　 endif 
 　 　 endloop 
 　 　 min - subset = min - subset - unchange 
 2.2 归类 拓扑 排序 
 　 　 假设 由 2.1 节 得到 的 最 小子 集中 的 物化 视图 有 m 个 （ m ≤ M ） , 我们 重新 将 其 标记 为 V1 , V2 , ... , Vm . 这 m 个 物化 视图 中 可能 还 存在 定义 嵌套 关系 , 因此 有 必要 对 最 小子 集中 的 视图 进行 分类 , 主要 算法 描述 如下 . 
 　 　 输入 : 有向图 G = 〈 V , E 〉 . 
 　 　 输出 : 若干 有序 分类 集合 class . 
 　 　 top : = null ; 
 　 　 fori = 1tondo 　 　 　 　 　 　 / * 建立 一个 无 先驱 顶点 （ 内次 为 0 ） 的 栈 . * / 
 　 　 　 　 　 ifi . count = 0thenstack : = top ; top : = i ; 
 　 　 endfor 
 　 　 j : = 1 ; 
 　 　 dowhiletop ＜ ＞ null / * 将 栈 内 的 顶点 归为 一类 输出 , 再 建立 新 的 栈 , 直到 新栈 为 空 * / 
 　 　 　 　 　 class ［ j ］ : = ; 
 　 　 　 　 　 dowhiletop ＜ ＞ null 
 　 　 　 　 　 　 del - point : = top ; top . count : = ‘ * ’ ; top : = top . stack ; 
 　 　 　 　 　 　 class ［ j ］ : = class ［ j ］ ∪ { del - point } ; 
 　 　 　 　 　 　 ptr : = del - point . link ; 
 　 　 　 　 　 　 dowhileptr ＜ ＞ null 
 　 　 　 　 　 　 　 K : = ptr . vertex ; K . count : = K . count - 1 ; ptr : = ptr . link ; 
 　 　 　 　 　 　 enddo 
 　 　 　 　 　 　 j = j + 1 ; 
 　 　 　 　 　 enddo 
 　 　 　 　 　 top : = null ; 
 　 　 　 　 　 fori = 1tondo 
 　 　 　 　 　 　 ifi . count = 0theni . stack : = top ; top : = i ; 
 　 　 　 　 　 endfor 
 　 　 enddo 
 　 　 对 有 n 个 顶点 和 e 条边 的 有向图 , 搜索 入度 为 0 的 时间 为 O ( n ) , 若 有向图 无环 , 入度 减 1 的 操作 在 外层 dowhiletop ＜ ＞ null 语句 中共 执行 e 次 , 所以 总 的 时间 复杂度 为 O ( n * e ) . 
 2.3 并行 流水线 处理 模式 
 　 　 经过 上面 的 处理 后 , 对于 某个 class ［ i ］ 中 的 顶点 集 （ 视 图集 ） , 各 顶点 之间 已 没有 嵌套 定义 关系 , 于是 , 我们 提出 了 一种 流水线 处理 模式 来 并行 保持 某个 class 集中 的 视图 . 
 　 　 设 某个 class ［ i ］ 中 的 顶点 （ 物化 视图 ） 有 m 个 . U = { δ 1 , δ 2 , ... , δ n } 是 对 数据库 的 修改 . 我们 把 根据 δ i 保持 Vj 的 过程 定义 为 UPDATE ( δ i , Vj ) , 在 这种 模式 中 , 每个 UPDATE 过程 处理 时间 并不相同 . 我们 设计 了 一种 基于 并行算法 的 信号量 控制 机制 来 保证 正确 的 运行 . 
 　 　 V1 的 算法 . 
 　 　 初始化 : foreach δ i ∈ Udo 
 　 　 commitUPDATE ( δ i , V1 ) ; 
 　 　 sendDONE ( δ i , V1 ) messagetoV2 ; 
 　 　 endfor ; 
 　 　 sendFINISHmessagetoV2 ; 
 　 　 parabegin 
 　 　 　 　 　 receivingACKmessagefromV2do : 
 　 　 　 　 　 stopitselfalgorithmicexecution ; 
 　 　 paraend . 
 　 　 一般 视图 Vu ( 1 ＜ u ≤ m ) 的 算法 . 
 　 　 初始化 : committed : = 0 ; 
 　 　 parabegin 
 　 　 　 　 　 receivingDONE ( δ i , Vu - 1 ) messagefromVu - 1do : 
 　 　 　 　 　 　 　 L1 : ifcommitted ＜ i - 1thengotoL1 ; 
 　 　 　 　 　 　 　 commitUPDATE ( δ i , Vu ) ; 
 　 　 　 　 　 　 　 committed : = committed + 1 ; 
 　 　 　 　 　 　 　 ifVu ≠ VmthensendDONE ( δ i , Vu ) messagetoVu + 1 ; 
 　 　 paraend ; 
 　 　 parabegin 
 　 　 　 　 　 receivingFINISHmessagefromVu - 1do : 
 　 　 　 　 　 　 　 L2 : ifcommitted ＜ nthengotoL2 ; 
 　 　 　 　 　 　 　 ifVu ≠ VmthensendFINISHmessagetoVu + 1 ; 
 　 　 　 　 　 　 　 elsesendACKmessagetoVm - 1 ; 
 　 　 paraend ; 
 　 　 parabegin 
 　 　 　 　 　 receivingACKmessagefromVu + 1do : 
 　 　 　 　 　 sendACKmessagetoVu - 1 ; 
 　 　 　 　 　 stopitselfalgorithmicexecution ; 
 　 　 paraend . 
 　 　 运行 该 算法 时 , 若 每个 UPDATE 过程 处理 时间 相同 , 记 为 Δ t0 , 流水线 上 完成 n 个 任务 的 时间 为 　 　 　 T = n Δ t0 + ( m - 1 ) Δ t0 , 若 不 相等 , 则 为 最慢 一段 所 需 时间 . 
 　 　 注意 到 L ( V ) 的 计算 , 仅 利用 了 当前 物化 视图 V , 因此 , 若 UPDATE ( δ i , Vu ) 没有 使 Vu 发生变化 , 那么 在 执行 UPDATE ( δ i + 1 , Vu ) 时 , 就 不必 再 重新 计算 L ( Vu ) . 我们 建立 L ( V ) 优化 管理机制 来 随时 监测 各个 处理器 上 UPDATE ( δ i , Vu ) 的 结果 , 从而 避免 了 重复 计算 . 
 3 结论 
 　 　 本文 提出 了 一种 多 物化 视图 增量 保持 三 阶段 模式 , 这种 模式 能够 根据 多 物化 视图 之间 的 内在联系 进行 分类 处理 , 并 有效 利用 了 部分 信息 保持 物化 视图 的 方法 , 减少 了 分布式 数据库 及 数据仓库 中 的 通信 费用 和 维护 代价 . 
 基金项目 ： 本文 研究 得到 山东省 自然科学 基金 资助 . 
 作者简介 ： 作者 王腾 蛟 , 1973 年生 , 博士生 , 主要 研究 领域 为 数据库 管理系统 . 
 　 　 　 　 　 王 海洋 , 1965 年生 , 教授 , 主要 研究 领域 为 数据库 , 管理信息系统 . 
 　 　 　 　 　 洪晓光 , 1964 年生 , 副教授 , 主要 研究 领域 为 并行 / 分布式 数据库 . 
 　 　 　 　 　 董继润 , 1935 年生 , 教授 , 主要 研究 领域 为 数据库 , 管理信息系统 . 
 作者 单位 ： 王腾 蛟 　 北京大学 计算机 科学技术 系 北京 100871 
 　 　 　 　 　 王 海洋 　 洪晓光 　 董继润 　 山东大学 计算机科学 系 济南 　 250100 
 本文 通讯联系 人 : 王腾 蛟 ， 北京 100871 , 北京大学 27 楼 326 
 参考文献 
 　 1AshishGupta , BlakleyJA . Usingpartialinformationtoupdatematerializedview . InformationSystems , 1995 , 20 ( 8 ) : 641 ～ 662 
 　 2TompaFW , BlackleyJA . Maintainingmaterializedviewwithoutaccessingbasedata . InformationSystems , 1988 , 13 ( 4 ) : 393 ～ 406 
 本文 1998 - 10 - 06 收到 原稿 , 1998 - 12 - 21 收到 修改稿 
